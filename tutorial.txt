This document describes how to deploy 3cixty backend

1. Use current configurations on VMs:

1.1. Development environment (DEV server)

- Go to the host `dev.3cixty.com`
- Go to the `/home/kinh/3cixty_github/querymanager` folder
- Execute the command: `$ sh dev.deployment.sh`

1.2. Production environment

You need to do the following steps on both two Tomcat servers (`176.28.49.52` and `91.250.80.148`):

- Access to each Tomcat server, then go to the `/home/kinh/github/querymanager` folder
- Execute the command: `$ sh api.deployment.sh`

2. Configure fresh clone from github:

- Clone code from github
- Go to `querymanagerServlet/WebContent/WEB-INF`
- Open the `report.properties` file, fill in the password for noreply@3cixty.com, then redo the section 1.2

3. Configuration files

3.1. Development environment

- appkey/oauth/apis-authorization-server-war/src/main/resources/dev.apis.application.properties (OAuth server database)
- 3cixty-db/resources/dev.hibernate.cfg.xml (3cixty database)
- 3cixty-db/resources/dev.memcached.conf (memcached server addresses)
- querymanagerServlet/WebContent/WEB-INF/dev.3cixty.properties (specify database server, virtuoso endpoint, trex server through HAProxy)
- querymanagerServlet/WebContent/WEB-INF/prefix.properties (prefixes used by Virtuoso)
- querymanagerServlet/WebContent/WEB-INF/authBypass.list (a list of app keys which makes 3cixty authorization process invisible)
- querymanagerServlet/WebContent/WEB-INF/report.properties (account information for reporting API)

Note that only the list file (report.properties) needs to be filled in when you redeploy backend!

3.2. Production environment

- appkey/oauth/apis-authorization-server-war/src/main/resources/api.apis.application.properties (OAuth server database)
- 3cixty-db/resources/api.hibernate.cfg.xml (3cixty database)
- 3cixty-db/resources/api.memcached.conf (memcached server addresses)
- querymanagerServlet/WebContent/WEB-INF/api.3cixty.properties (specify database server, virtuoso endpoint, trex server through HAProxy)
- querymanagerServlet/WebContent/WEB-INF/prefix.properties (prefixes used by Virtuoso)
- querymanagerServlet/WebContent/WEB-INF/authBypass.list (a list of app keys which makes 3cixty authorization process invisible)
- querymanagerServlet/WebContent/WEB-INF/report.properties (account information for reporting API)

Note that only the list file (report.properties) needs to be filled in when you redeploy backend!

3.3. Local machine environment

  (in case you want to deploy QueryManager on your localhost machine)

- Create a database schema `3cixty` in mySQL
- Create a user `3cixty` and give permission to the user so that the user can be able to create table, alter, drop, ... for just the schema `3cixty`
- Go to files `appkey/oauth/apis-authorization-server-war/src/main/resources/apis.application.properties` and `3cixty-db/resources/hibernate.cfg.xml` and give the password for `3cixty` user there.
- If you use a memcached server, go to 3cixty-db/resources/memcached.conf and give a new IP address; otherwise, you don't need to modify it as this configuration is not mandatory.
- Go to  `querymanagerServlet/WebContent/WEB-INF/report.properties` and give the password for `noreply@3cixty.com` so that QueryManager is able to send messages using the email.
- Run $ mvn clean install
- Copy .war file in appkey/oauth/apis-authorization-server-war/target/ to Tomcat/webapps, then start Tomcat (make sure first time running, there is empty database so that OAuth server is able to create tables - a limit for OAuth server).
- Copy .war file in querymanagerServlet/target/ to Tomcat/webapps
- Check if you can get http://localhost:8080/v2/getScopes
