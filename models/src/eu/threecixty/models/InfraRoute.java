package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: InfraRoute <br>
 * @version generated on Wed Jun 25 09:55:40 CEST 2014 by ragarwal
 */

public interface InfraRoute extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasInfraRouteID
     */
     
    /**
     * Gets all property values for the hasInfraRouteID property.<p>
     * 
     * @returns a collection of values for the hasInfraRouteID property.
     */
    Collection<? extends Integer> getHasInfraRouteID();

    /**
     * Checks if the class has a hasInfraRouteID property value.<p>
     * 
     * @return true if there is a hasInfraRouteID property value.
     */
    boolean hasHasInfraRouteID();

    /**
     * Adds a hasInfraRouteID property value.<p>
     * 
     * @param newHasInfraRouteID the hasInfraRouteID property value to be added
     */
    void addHasInfraRouteID(Integer newHasInfraRouteID);

    /**
     * Removes a hasInfraRouteID property value.<p>
     * 
     * @param oldHasInfraRouteID the hasInfraRouteID property value to be removed.
     */
    void removeHasInfraRouteID(Integer oldHasInfraRouteID);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasInfraRouteName
     */
     
    /**
     * Gets all property values for the hasInfraRouteName property.<p>
     * 
     * @returns a collection of values for the hasInfraRouteName property.
     */
    Collection<? extends String> getHasInfraRouteName();

    /**
     * Checks if the class has a hasInfraRouteName property value.<p>
     * 
     * @return true if there is a hasInfraRouteName property value.
     */
    boolean hasHasInfraRouteName();

    /**
     * Adds a hasInfraRouteName property value.<p>
     * 
     * @param newHasInfraRouteName the hasInfraRouteName property value to be added
     */
    void addHasInfraRouteName(String newHasInfraRouteName);

    /**
     * Removes a hasInfraRouteName property value.<p>
     * 
     * @param oldHasInfraRouteName the hasInfraRouteName property value to be removed.
     */
    void removeHasInfraRouteName(String oldHasInfraRouteName);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasInfraRouteNetwork
     */
     
    /**
     * Gets all property values for the hasInfraRouteNetwork property.<p>
     * 
     * @returns a collection of values for the hasInfraRouteNetwork property.
     */
    Collection<? extends String> getHasInfraRouteNetwork();

    /**
     * Checks if the class has a hasInfraRouteNetwork property value.<p>
     * 
     * @return true if there is a hasInfraRouteNetwork property value.
     */
    boolean hasHasInfraRouteNetwork();

    /**
     * Adds a hasInfraRouteNetwork property value.<p>
     * 
     * @param newHasInfraRouteNetwork the hasInfraRouteNetwork property value to be added
     */
    void addHasInfraRouteNetwork(String newHasInfraRouteNetwork);

    /**
     * Removes a hasInfraRouteNetwork property value.<p>
     * 
     * @param oldHasInfraRouteNetwork the hasInfraRouteNetwork property value to be removed.
     */
    void removeHasInfraRouteNetwork(String oldHasInfraRouteNetwork);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasInfraRouteOperator
     */
     
    /**
     * Gets all property values for the hasInfraRouteOperator property.<p>
     * 
     * @returns a collection of values for the hasInfraRouteOperator property.
     */
    Collection<? extends String> getHasInfraRouteOperator();

    /**
     * Checks if the class has a hasInfraRouteOperator property value.<p>
     * 
     * @return true if there is a hasInfraRouteOperator property value.
     */
    boolean hasHasInfraRouteOperator();

    /**
     * Adds a hasInfraRouteOperator property value.<p>
     * 
     * @param newHasInfraRouteOperator the hasInfraRouteOperator property value to be added
     */
    void addHasInfraRouteOperator(String newHasInfraRouteOperator);

    /**
     * Removes a hasInfraRouteOperator property value.<p>
     * 
     * @param oldHasInfraRouteOperator the hasInfraRouteOperator property value to be removed.
     */
    void removeHasInfraRouteOperator(String oldHasInfraRouteOperator);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasInfraRouteReference
     */
     
    /**
     * Gets all property values for the hasInfraRouteReference property.<p>
     * 
     * @returns a collection of values for the hasInfraRouteReference property.
     */
    Collection<? extends String> getHasInfraRouteReference();

    /**
     * Checks if the class has a hasInfraRouteReference property value.<p>
     * 
     * @return true if there is a hasInfraRouteReference property value.
     */
    boolean hasHasInfraRouteReference();

    /**
     * Adds a hasInfraRouteReference property value.<p>
     * 
     * @param newHasInfraRouteReference the hasInfraRouteReference property value to be added
     */
    void addHasInfraRouteReference(String newHasInfraRouteReference);

    /**
     * Removes a hasInfraRouteReference property value.<p>
     * 
     * @param oldHasInfraRouteReference the hasInfraRouteReference property value to be removed.
     */
    void removeHasInfraRouteReference(String oldHasInfraRouteReference);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasInfraRouteSymbol
     */
     
    /**
     * Gets all property values for the hasInfraRouteSymbol property.<p>
     * 
     * @returns a collection of values for the hasInfraRouteSymbol property.
     */
    Collection<? extends String> getHasInfraRouteSymbol();

    /**
     * Checks if the class has a hasInfraRouteSymbol property value.<p>
     * 
     * @return true if there is a hasInfraRouteSymbol property value.
     */
    boolean hasHasInfraRouteSymbol();

    /**
     * Adds a hasInfraRouteSymbol property value.<p>
     * 
     * @param newHasInfraRouteSymbol the hasInfraRouteSymbol property value to be added
     */
    void addHasInfraRouteSymbol(String newHasInfraRouteSymbol);

    /**
     * Removes a hasInfraRouteSymbol property value.<p>
     * 
     * @param oldHasInfraRouteSymbol the hasInfraRouteSymbol property value to be removed.
     */
    void removeHasInfraRouteSymbol(String oldHasInfraRouteSymbol);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasInfraRouteType
     */
     
    /**
     * Gets all property values for the hasInfraRouteType property.<p>
     * 
     * @returns a collection of values for the hasInfraRouteType property.
     */
    Collection<? extends String> getHasInfraRouteType();

    /**
     * Checks if the class has a hasInfraRouteType property value.<p>
     * 
     * @return true if there is a hasInfraRouteType property value.
     */
    boolean hasHasInfraRouteType();

    /**
     * Adds a hasInfraRouteType property value.<p>
     * 
     * @param newHasInfraRouteType the hasInfraRouteType property value to be added
     */
    void addHasInfraRouteType(String newHasInfraRouteType);

    /**
     * Removes a hasInfraRouteType property value.<p>
     * 
     * @param oldHasInfraRouteType the hasInfraRouteType property value to be removed.
     */
    void removeHasInfraRouteType(String oldHasInfraRouteType);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasModalityType
     */
     
    /**
     * Gets all property values for the hasModalityType property.<p>
     * 
     * @returns a collection of values for the hasModalityType property.
     */
    Collection<? extends Object> getHasModalityType();

    /**
     * Checks if the class has a hasModalityType property value.<p>
     * 
     * @return true if there is a hasModalityType property value.
     */
    boolean hasHasModalityType();

    /**
     * Adds a hasModalityType property value.<p>
     * 
     * @param newHasModalityType the hasModalityType property value to be added
     */
    void addHasModalityType(Object newHasModalityType);

    /**
     * Removes a hasModalityType property value.<p>
     * 
     * @param oldHasModalityType the hasModalityType property value to be removed.
     */
    void removeHasModalityType(Object oldHasModalityType);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
