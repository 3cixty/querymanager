package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: UserProfile <br>
 * @version generated on Fri May 23 10:57:54 CEST 2014 by cknguyen
 */

public interface UserProfile extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasEducation
     */
     
    /**
     * Gets all property values for the hasEducation property.<p>
     * 
     * @returns a collection of values for the hasEducation property.
     */
    Collection<? extends Education> getHasEducation();

    /**
     * Checks if the class has a hasEducation property value.<p>
     * 
     * @return true if there is a hasEducation property value.
     */
    boolean hasHasEducation();

    /**
     * Adds a hasEducation property value.<p>
     * 
     * @param newHasEducation the hasEducation property value to be added
     */
    void addHasEducation(Education newHasEducation);

    /**
     * Removes a hasEducation property value.<p>
     * 
     * @param oldHasEducation the hasEducation property value to be removed.
     */
    void removeHasEducation(Education oldHasEducation);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasEmployerInformation
     */
     
    /**
     * Gets all property values for the hasEmployerInformation property.<p>
     * 
     * @returns a collection of values for the hasEmployerInformation property.
     */
    Collection<? extends EmployerInformation> getHasEmployerInformation();

    /**
     * Checks if the class has a hasEmployerInformation property value.<p>
     * 
     * @return true if there is a hasEmployerInformation property value.
     */
    boolean hasHasEmployerInformation();

    /**
     * Adds a hasEmployerInformation property value.<p>
     * 
     * @param newHasEmployerInformation the hasEmployerInformation property value to be added
     */
    void addHasEmployerInformation(EmployerInformation newHasEmployerInformation);

    /**
     * Removes a hasEmployerInformation property value.<p>
     * 
     * @param oldHasEmployerInformation the hasEmployerInformation property value to be removed.
     */
    void removeHasEmployerInformation(EmployerInformation oldHasEmployerInformation);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasLanguage
     */
     
    /**
     * Gets all property values for the hasLanguage property.<p>
     * 
     * @returns a collection of values for the hasLanguage property.
     */
    Collection<? extends Language> getHasLanguage();

    /**
     * Checks if the class has a hasLanguage property value.<p>
     * 
     * @return true if there is a hasLanguage property value.
     */
    boolean hasHasLanguage();

    /**
     * Adds a hasLanguage property value.<p>
     * 
     * @param newHasLanguage the hasLanguage property value to be added
     */
    void addHasLanguage(Language newHasLanguage);

    /**
     * Removes a hasLanguage property value.<p>
     * 
     * @param oldHasLanguage the hasLanguage property value to be removed.
     */
    void removeHasLanguage(Language oldHasLanguage);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPreference
     */
     
    /**
     * Gets all property values for the hasPreference property.<p>
     * 
     * @returns a collection of values for the hasPreference property.
     */
    Collection<? extends Preference> getHasPreference();

    /**
     * Checks if the class has a hasPreference property value.<p>
     * 
     * @return true if there is a hasPreference property value.
     */
    boolean hasHasPreference();

    /**
     * Adds a hasPreference property value.<p>
     * 
     * @param newHasPreference the hasPreference property value to be added
     */
    void addHasPreference(Preference newHasPreference);

    /**
     * Removes a hasPreference property value.<p>
     * 
     * @param oldHasPreference the hasPreference property value to be removed.
     */
    void removeHasPreference(Preference oldHasPreference);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasProfileIdentities
     */
     
    /**
     * Gets all property values for the hasProfileIdentities property.<p>
     * 
     * @returns a collection of values for the hasProfileIdentities property.
     */
    Collection<? extends ProfileIdentities> getHasProfileIdentities();

    /**
     * Checks if the class has a hasProfileIdentities property value.<p>
     * 
     * @return true if there is a hasProfileIdentities property value.
     */
    boolean hasHasProfileIdentities();

    /**
     * Adds a hasProfileIdentities property value.<p>
     * 
     * @param newHasProfileIdentities the hasProfileIdentities property value to be added
     */
    void addHasProfileIdentities(ProfileIdentities newHasProfileIdentities);

    /**
     * Removes a hasProfileIdentities property value.<p>
     * 
     * @param oldHasProfileIdentities the hasProfileIdentities property value to be removed.
     */
    void removeHasProfileIdentities(ProfileIdentities oldHasProfileIdentities);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasQueryHistory
     */
     
    /**
     * Gets all property values for the hasQueryHistory property.<p>
     * 
     * @returns a collection of values for the hasQueryHistory property.
     */
    Collection<? extends QueryHistory> getHasQueryHistory();

    /**
     * Checks if the class has a hasQueryHistory property value.<p>
     * 
     * @return true if there is a hasQueryHistory property value.
     */
    boolean hasHasQueryHistory();

    /**
     * Adds a hasQueryHistory property value.<p>
     * 
     * @param newHasQueryHistory the hasQueryHistory property value to be added
     */
    void addHasQueryHistory(QueryHistory newHasQueryHistory);

    /**
     * Removes a hasQueryHistory property value.<p>
     * 
     * @param oldHasQueryHistory the hasQueryHistory property value to be removed.
     */
    void removeHasQueryHistory(QueryHistory oldHasQueryHistory);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasSkill
     */
     
    /**
     * Gets all property values for the hasSkill property.<p>
     * 
     * @returns a collection of values for the hasSkill property.
     */
    Collection<? extends Skill> getHasSkill();

    /**
     * Checks if the class has a hasSkill property value.<p>
     * 
     * @return true if there is a hasSkill property value.
     */
    boolean hasHasSkill();

    /**
     * Adds a hasSkill property value.<p>
     * 
     * @param newHasSkill the hasSkill property value to be added
     */
    void addHasSkill(Skill newHasSkill);

    /**
     * Removes a hasSkill property value.<p>
     * 
     * @param oldHasSkill the hasSkill property value to be removed.
     */
    void removeHasSkill(Skill oldHasSkill);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTransport
     */
     
    /**
     * Gets all property values for the hasTransport property.<p>
     * 
     * @returns a collection of values for the hasTransport property.
     */
    Collection<? extends Transport> getHasTransport();

    /**
     * Checks if the class has a hasTransport property value.<p>
     * 
     * @return true if there is a hasTransport property value.
     */
    boolean hasHasTransport();

    /**
     * Adds a hasTransport property value.<p>
     * 
     * @param newHasTransport the hasTransport property value to be added
     */
    void addHasTransport(Transport newHasTransport);

    /**
     * Removes a hasTransport property value.<p>
     * 
     * @param oldHasTransport the hasTransport property value to be removed.
     */
    void removeHasTransport(Transport oldHasTransport);


    /* ***************************************************
     * Property http://www.w3.org/2006/vcard/ns#hasAddress
     */
     
    /**
     * Gets all property values for the has_address property.<p>
     * 
     * @returns a collection of values for the has_address property.
     */
    Collection<? extends WrappedIndividual> getHas_address();

    /**
     * Checks if the class has a has_address property value.<p>
     * 
     * @return true if there is a has_address property value.
     */
    boolean hasHas_address();

    /**
     * Adds a has_address property value.<p>
     * 
     * @param newHas_address the has_address property value to be added
     */
    void addHas_address(WrappedIndividual newHas_address);

    /**
     * Removes a has_address property value.<p>
     * 
     * @param oldHas_address the has_address property value to be removed.
     */
    void removeHas_address(WrappedIndividual oldHas_address);


    /* ***************************************************
     * Property http://www.w3.org/2006/vcard/ns#hasName
     */
     
    /**
     * Gets all property values for the has_name property.<p>
     * 
     * @returns a collection of values for the has_name property.
     */
    Collection<? extends WrappedIndividual> getHas_name();

    /**
     * Checks if the class has a has_name property value.<p>
     * 
     * @return true if there is a has_name property value.
     */
    boolean hasHas_name();

    /**
     * Adds a has_name property value.<p>
     * 
     * @param newHas_name the has_name property value to be added
     */
    void addHas_name(WrappedIndividual newHas_name);

    /**
     * Removes a has_name property value.<p>
     * 
     * @param oldHas_name the has_name property value to be removed.
     */
    void removeHas_name(WrappedIndividual oldHas_name);


    /* ***************************************************
     * Property http://xmlns.com/foaf/0.1/knows
     */
     
    /**
     * Gets all property values for the knows property.<p>
     * 
     * @returns a collection of values for the knows property.
     */
    Collection<? extends UserProfile> getKnows();

    /**
     * Checks if the class has a knows property value.<p>
     * 
     * @return true if there is a knows property value.
     */
    boolean hasKnows();

    /**
     * Adds a knows property value.<p>
     * 
     * @param newKnows the knows property value to be added
     */
    void addKnows(UserProfile newKnows);

    /**
     * Removes a knows property value.<p>
     * 
     * @param oldKnows the knows property value to be removed.
     */
    void removeKnows(UserProfile oldKnows);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasEmail
     */
     
    /**
     * Gets all property values for the hasEmail property.<p>
     * 
     * @returns a collection of values for the hasEmail property.
     */
    Collection<? extends String> getHasEmail();

    /**
     * Checks if the class has a hasEmail property value.<p>
     * 
     * @return true if there is a hasEmail property value.
     */
    boolean hasHasEmail();

    /**
     * Adds a hasEmail property value.<p>
     * 
     * @param newHasEmail the hasEmail property value to be added
     */
    void addHasEmail(String newHasEmail);

    /**
     * Removes a hasEmail property value.<p>
     * 
     * @param oldHasEmail the hasEmail property value to be removed.
     */
    void removeHasEmail(String oldHasEmail);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasGender
     */
     
    /**
     * Gets all property values for the hasGender property.<p>
     * 
     * @returns a collection of values for the hasGender property.
     */
    Collection<? extends Object> getHasGender();

    /**
     * Checks if the class has a hasGender property value.<p>
     * 
     * @return true if there is a hasGender property value.
     */
    boolean hasHasGender();

    /**
     * Adds a hasGender property value.<p>
     * 
     * @param newHasGender the hasGender property value to be added
     */
    void addHasGender(Object newHasGender);

    /**
     * Removes a hasGender property value.<p>
     * 
     * @param oldHasGender the hasGender property value to be removed.
     */
    void removeHasGender(Object oldHasGender);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasHobbies
     */
     
    /**
     * Gets all property values for the hasHobbies property.<p>
     * 
     * @returns a collection of values for the hasHobbies property.
     */
    Collection<? extends String> getHasHobbies();

    /**
     * Checks if the class has a hasHobbies property value.<p>
     * 
     * @return true if there is a hasHobbies property value.
     */
    boolean hasHasHobbies();

    /**
     * Adds a hasHobbies property value.<p>
     * 
     * @param newHasHobbies the hasHobbies property value to be added
     */
    void addHasHobbies(String newHasHobbies);

    /**
     * Removes a hasHobbies property value.<p>
     * 
     * @param oldHasHobbies the hasHobbies property value to be removed.
     */
    void removeHasHobbies(String oldHasHobbies);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasUID
     */
     
    /**
     * Gets all property values for the hasUID property.<p>
     * 
     * @returns a collection of values for the hasUID property.
     */
    Collection<? extends String> getHasUID();

    /**
     * Checks if the class has a hasUID property value.<p>
     * 
     * @return true if there is a hasUID property value.
     */
    boolean hasHasUID();

    /**
     * Adds a hasUID property value.<p>
     * 
     * @param newHasUID the hasUID property value to be added
     */
    void addHasUID(String newHasUID);

    /**
     * Removes a hasUID property value.<p>
     * 
     * @param oldHasUID the hasUID property value to be removed.
     */
    void removeHasUID(String oldHasUID);



    /* ***************************************************
     * Property http://www.w3.org/2006/vcard/ns#bday
     */
     
    /**
     * Gets all property values for the birth_date property.<p>
     * 
     * @returns a collection of values for the birth_date property.
     */
    Collection<? extends Object> getBirth_date();

    /**
     * Checks if the class has a birth_date property value.<p>
     * 
     * @return true if there is a birth_date property value.
     */
    boolean hasBirth_date();

    /**
     * Adds a birth_date property value.<p>
     * 
     * @param newBirth_date the birth_date property value to be added
     */
    void addBirth_date(Object newBirth_date);

    /**
     * Removes a birth_date property value.<p>
     * 
     * @param oldBirth_date the birth_date property value to be removed.
     */
    void removeBirth_date(Object oldBirth_date);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
