package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Transport <br>
 * @version generated on Thu Jun 05 16:06:07 CEST 2014 by ragarwal
 */

public interface Transport extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasAccompany
     */
     
    /**
     * Gets all property values for the hasAccompany property.<p>
     * 
     * @returns a collection of values for the hasAccompany property.
     */
    Collection<? extends Accompanying> getHasAccompany();

    /**
     * Checks if the class has a hasAccompany property value.<p>
     * 
     * @return true if there is a hasAccompany property value.
     */
    boolean hasHasAccompany();

    /**
     * Adds a hasAccompany property value.<p>
     * 
     * @param newHasAccompany the hasAccompany property value to be added
     */
    void addHasAccompany(Accompanying newHasAccompany);

    /**
     * Removes a hasAccompany property value.<p>
     * 
     * @param oldHasAccompany the hasAccompany property value to be removed.
     */
    void removeHasAccompany(Accompanying oldHasAccompany);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasModalityStatistics
     */
     
    /**
     * Gets all property values for the hasModalityStatistics property.<p>
     * 
     * @returns a collection of values for the hasModalityStatistics property.
     */
    Collection<? extends ModalityStatistics> getHasModalityStatistics();

    /**
     * Checks if the class has a hasModalityStatistics property value.<p>
     * 
     * @return true if there is a hasModalityStatistics property value.
     */
    boolean hasHasModalityStatistics();

    /**
     * Adds a hasModalityStatistics property value.<p>
     * 
     * @param newHasModalityStatistics the hasModalityStatistics property value to be added
     */
    void addHasModalityStatistics(ModalityStatistics newHasModalityStatistics);

    /**
     * Removes a hasModalityStatistics property value.<p>
     * 
     * @param oldHasModalityStatistics the hasModalityStatistics property value to be removed.
     */
    void removeHasModalityStatistics(ModalityStatistics oldHasModalityStatistics);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPersonalPlace
     */
     
    /**
     * Gets all property values for the hasPersonalPlace property.<p>
     * 
     * @returns a collection of values for the hasPersonalPlace property.
     */
    Collection<? extends PersonalPlace> getHasPersonalPlace();

    /**
     * Checks if the class has a hasPersonalPlace property value.<p>
     * 
     * @return true if there is a hasPersonalPlace property value.
     */
    boolean hasHasPersonalPlace();

    /**
     * Adds a hasPersonalPlace property value.<p>
     * 
     * @param newHasPersonalPlace the hasPersonalPlace property value to be added
     */
    void addHasPersonalPlace(PersonalPlace newHasPersonalPlace);

    /**
     * Removes a hasPersonalPlace property value.<p>
     * 
     * @param oldHasPersonalPlace the hasPersonalPlace property value to be removed.
     */
    void removeHasPersonalPlace(PersonalPlace oldHasPersonalPlace);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasRegularTrip
     */
     
    /**
     * Gets all property values for the hasRegularTrip property.<p>
     * 
     * @returns a collection of values for the hasRegularTrip property.
     */
    Collection<? extends RegularTrip> getHasRegularTrip();

    /**
     * Checks if the class has a hasRegularTrip property value.<p>
     * 
     * @return true if there is a hasRegularTrip property value.
     */
    boolean hasHasRegularTrip();

    /**
     * Adds a hasRegularTrip property value.<p>
     * 
     * @param newHasRegularTrip the hasRegularTrip property value to be added
     */
    void addHasRegularTrip(RegularTrip newHasRegularTrip);

    /**
     * Removes a hasRegularTrip property value.<p>
     * 
     * @param oldHasRegularTrip the hasRegularTrip property value to be removed.
     */
    void removeHasRegularTrip(RegularTrip oldHasRegularTrip);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripMeasurement
     */
     
    /**
     * Gets all property values for the hasTripMeasurement property.<p>
     * 
     * @returns a collection of values for the hasTripMeasurement property.
     */
    Collection<? extends TripMeasurement> getHasTripMeasurement();

    /**
     * Checks if the class has a hasTripMeasurement property value.<p>
     * 
     * @return true if there is a hasTripMeasurement property value.
     */
    boolean hasHasTripMeasurement();

    /**
     * Adds a hasTripMeasurement property value.<p>
     * 
     * @param newHasTripMeasurement the hasTripMeasurement property value to be added
     */
    void addHasTripMeasurement(TripMeasurement newHasTripMeasurement);

    /**
     * Removes a hasTripMeasurement property value.<p>
     * 
     * @param oldHasTripMeasurement the hasTripMeasurement property value to be removed.
     */
    void removeHasTripMeasurement(TripMeasurement oldHasTripMeasurement);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
