package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Trip <br>
 * @version generated on Thu Jun 05 16:06:07 CEST 2014 by ragarwal
 */

public interface Trip extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasInfraRoute
     */
     
    /**
     * Gets all property values for the hasInfraRoute property.<p>
     * 
     * @returns a collection of values for the hasInfraRoute property.
     */
    Collection<? extends InfraRoute> getHasInfraRoute();

    /**
     * Checks if the class has a hasInfraRoute property value.<p>
     * 
     * @return true if there is a hasInfraRoute property value.
     */
    boolean hasHasInfraRoute();

    /**
     * Adds a hasInfraRoute property value.<p>
     * 
     * @param newHasInfraRoute the hasInfraRoute property value to be added
     */
    void addHasInfraRoute(InfraRoute newHasInfraRoute);

    /**
     * Removes a hasInfraRoute property value.<p>
     * 
     * @param oldHasInfraRoute the hasInfraRoute property value to be removed.
     */
    void removeHasInfraRoute(InfraRoute oldHasInfraRoute);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasMappedLocation
     */
     
    /**
     * Gets all property values for the hasMappedLocation property.<p>
     * 
     * @returns a collection of values for the hasMappedLocation property.
     */
    Collection<? extends MappedLocation> getHasMappedLocation();

    /**
     * Checks if the class has a hasMappedLocation property value.<p>
     * 
     * @return true if there is a hasMappedLocation property value.
     */
    boolean hasHasMappedLocation();

    /**
     * Adds a hasMappedLocation property value.<p>
     * 
     * @param newHasMappedLocation the hasMappedLocation property value to be added
     */
    void addHasMappedLocation(MappedLocation newHasMappedLocation);

    /**
     * Removes a hasMappedLocation property value.<p>
     * 
     * @param oldHasMappedLocation the hasMappedLocation property value to be removed.
     */
    void removeHasMappedLocation(MappedLocation oldHasMappedLocation);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPersonalPlace
     */
     
    /**
     * Gets all property values for the hasPersonalPlace property.<p>
     * 
     * @returns a collection of values for the hasPersonalPlace property.
     */
    Collection<? extends PersonalPlace> getHasPersonalPlace();

    /**
     * Checks if the class has a hasPersonalPlace property value.<p>
     * 
     * @return true if there is a hasPersonalPlace property value.
     */
    boolean hasHasPersonalPlace();

    /**
     * Adds a hasPersonalPlace property value.<p>
     * 
     * @param newHasPersonalPlace the hasPersonalPlace property value to be added
     */
    void addHasPersonalPlace(PersonalPlace newHasPersonalPlace);

    /**
     * Removes a hasPersonalPlace property value.<p>
     * 
     * @param oldHasPersonalPlace the hasPersonalPlace property value to be removed.
     */
    void removeHasPersonalPlace(PersonalPlace oldHasPersonalPlace);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasWeather
     */
     
    /**
     * Gets all property values for the hasWeather property.<p>
     * 
     * @returns a collection of values for the hasWeather property.
     */
    Collection<? extends Weather> getHasWeather();

    /**
     * Checks if the class has a hasWeather property value.<p>
     * 
     * @return true if there is a hasWeather property value.
     */
    boolean hasHasWeather();

    /**
     * Adds a hasWeather property value.<p>
     * 
     * @param newHasWeather the hasWeather property value to be added
     */
    void addHasWeather(Weather newHasWeather);

    /**
     * Removes a hasWeather property value.<p>
     * 
     * @param oldHasWeather the hasWeather property value to be removed.
     */
    void removeHasWeather(Weather oldHasWeather);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasDecisionLevel
     */
     
    /**
     * Gets all property values for the hasDecisionLevel property.<p>
     * 
     * @returns a collection of values for the hasDecisionLevel property.
     */
    Collection<? extends Object> getHasDecisionLevel();

    /**
     * Checks if the class has a hasDecisionLevel property value.<p>
     * 
     * @return true if there is a hasDecisionLevel property value.
     */
    boolean hasHasDecisionLevel();

    /**
     * Adds a hasDecisionLevel property value.<p>
     * 
     * @param newHasDecisionLevel the hasDecisionLevel property value to be added
     */
    void addHasDecisionLevel(Object newHasDecisionLevel);

    /**
     * Removes a hasDecisionLevel property value.<p>
     * 
     * @param oldHasDecisionLevel the hasDecisionLevel property value to be removed.
     */
    void removeHasDecisionLevel(Object oldHasDecisionLevel);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasModalityRole
     */
     
    /**
     * Gets all property values for the hasModalityRole property.<p>
     * 
     * @returns a collection of values for the hasModalityRole property.
     */
    Collection<? extends Object> getHasModalityRole();

    /**
     * Checks if the class has a hasModalityRole property value.<p>
     * 
     * @return true if there is a hasModalityRole property value.
     */
    boolean hasHasModalityRole();

    /**
     * Adds a hasModalityRole property value.<p>
     * 
     * @param newHasModalityRole the hasModalityRole property value to be added
     */
    void addHasModalityRole(Object newHasModalityRole);

    /**
     * Removes a hasModalityRole property value.<p>
     * 
     * @param oldHasModalityRole the hasModalityRole property value to be removed.
     */
    void removeHasModalityRole(Object oldHasModalityRole);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasModalityType
     */
     
    /**
     * Gets all property values for the hasModalityType property.<p>
     * 
     * @returns a collection of values for the hasModalityType property.
     */
    Collection<? extends Object> getHasModalityType();

    /**
     * Checks if the class has a hasModalityType property value.<p>
     * 
     * @return true if there is a hasModalityType property value.
     */
    boolean hasHasModalityType();

    /**
     * Adds a hasModalityType property value.<p>
     * 
     * @param newHasModalityType the hasModalityType property value to be added
     */
    void addHasModalityType(Object newHasModalityType);

    /**
     * Removes a hasModalityType property value.<p>
     * 
     * @param oldHasModalityType the hasModalityType property value to be removed.
     */
    void removeHasModalityType(Object oldHasModalityType);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTravelObjectiveType
     */
     
    /**
     * Gets all property values for the hasTravelObjectiveType property.<p>
     * 
     * @returns a collection of values for the hasTravelObjectiveType property.
     */
    Collection<? extends Object> getHasTravelObjectiveType();

    /**
     * Checks if the class has a hasTravelObjectiveType property value.<p>
     * 
     * @return true if there is a hasTravelObjectiveType property value.
     */
    boolean hasHasTravelObjectiveType();

    /**
     * Adds a hasTravelObjectiveType property value.<p>
     * 
     * @param newHasTravelObjectiveType the hasTravelObjectiveType property value to be added
     */
    void addHasTravelObjectiveType(Object newHasTravelObjectiveType);

    /**
     * Removes a hasTravelObjectiveType property value.<p>
     * 
     * @param oldHasTravelObjectiveType the hasTravelObjectiveType property value to be removed.
     */
    void removeHasTravelObjectiveType(Object oldHasTravelObjectiveType);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripAverageSpeed
     */
     
    /**
     * Gets all property values for the hasTripAverageSpeed property.<p>
     * 
     * @returns a collection of values for the hasTripAverageSpeed property.
     */
    Collection<? extends Object> getHasTripAverageSpeed();

    /**
     * Checks if the class has a hasTripAverageSpeed property value.<p>
     * 
     * @return true if there is a hasTripAverageSpeed property value.
     */
    boolean hasHasTripAverageSpeed();

    /**
     * Adds a hasTripAverageSpeed property value.<p>
     * 
     * @param newHasTripAverageSpeed the hasTripAverageSpeed property value to be added
     */
    void addHasTripAverageSpeed(Object newHasTripAverageSpeed);

    /**
     * Removes a hasTripAverageSpeed property value.<p>
     * 
     * @param oldHasTripAverageSpeed the hasTripAverageSpeed property value to be removed.
     */
    void removeHasTripAverageSpeed(Object oldHasTripAverageSpeed);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripGroupID
     */
     
    /**
     * Gets all property values for the hasTripGroupID property.<p>
     * 
     * @returns a collection of values for the hasTripGroupID property.
     */
    Collection<? extends Long> getHasTripGroupID();

    /**
     * Checks if the class has a hasTripGroupID property value.<p>
     * 
     * @return true if there is a hasTripGroupID property value.
     */
    boolean hasHasTripGroupID();

    /**
     * Adds a hasTripGroupID property value.<p>
     * 
     * @param newHasTripGroupID the hasTripGroupID property value to be added
     */
    void addHasTripGroupID(Long newHasTripGroupID);

    /**
     * Removes a hasTripGroupID property value.<p>
     * 
     * @param oldHasTripGroupID the hasTripGroupID property value to be removed.
     */
    void removeHasTripGroupID(Long oldHasTripGroupID);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripID
     */
     
    /**
     * Gets all property values for the hasTripID property.<p>
     * 
     * @returns a collection of values for the hasTripID property.
     */
    Collection<? extends Long> getHasTripID();

    /**
     * Checks if the class has a hasTripID property value.<p>
     * 
     * @return true if there is a hasTripID property value.
     */
    boolean hasHasTripID();

    /**
     * Adds a hasTripID property value.<p>
     * 
     * @param newHasTripID the hasTripID property value to be added
     */
    void addHasTripID(Long newHasTripID);

    /**
     * Removes a hasTripID property value.<p>
     * 
     * @param oldHasTripID the hasTripID property value to be removed.
     */
    void removeHasTripID(Long oldHasTripID);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripLastAnalyzed
     */
     
    /**
     * Gets all property values for the hasTripLastAnalyzed property.<p>
     * 
     * @returns a collection of values for the hasTripLastAnalyzed property.
     */
    Collection<? extends Long> getHasTripLastAnalyzed();

    /**
     * Checks if the class has a hasTripLastAnalyzed property value.<p>
     * 
     * @return true if there is a hasTripLastAnalyzed property value.
     */
    boolean hasHasTripLastAnalyzed();

    /**
     * Adds a hasTripLastAnalyzed property value.<p>
     * 
     * @param newHasTripLastAnalyzed the hasTripLastAnalyzed property value to be added
     */
    void addHasTripLastAnalyzed(Long newHasTripLastAnalyzed);

    /**
     * Removes a hasTripLastAnalyzed property value.<p>
     * 
     * @param oldHasTripLastAnalyzed the hasTripLastAnalyzed property value to be removed.
     */
    void removeHasTripLastAnalyzed(Long oldHasTripLastAnalyzed);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripModalityAutomatic
     */
     
    /**
     * Gets all property values for the hasTripModalityAutomatic property.<p>
     * 
     * @returns a collection of values for the hasTripModalityAutomatic property.
     */
    Collection<? extends Object> getHasTripModalityAutomatic();

    /**
     * Checks if the class has a hasTripModalityAutomatic property value.<p>
     * 
     * @return true if there is a hasTripModalityAutomatic property value.
     */
    boolean hasHasTripModalityAutomatic();

    /**
     * Adds a hasTripModalityAutomatic property value.<p>
     * 
     * @param newHasTripModalityAutomatic the hasTripModalityAutomatic property value to be added
     */
    void addHasTripModalityAutomatic(Object newHasTripModalityAutomatic);

    /**
     * Removes a hasTripModalityAutomatic property value.<p>
     * 
     * @param oldHasTripModalityAutomatic the hasTripModalityAutomatic property value to be removed.
     */
    void removeHasTripModalityAutomatic(Object oldHasTripModalityAutomatic);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripNumberOfPassengers
     */
     
    /**
     * Gets all property values for the hasTripNumberOfPassengers property.<p>
     * 
     * @returns a collection of values for the hasTripNumberOfPassengers property.
     */
    Collection<? extends Integer> getHasTripNumberOfPassengers();

    /**
     * Checks if the class has a hasTripNumberOfPassengers property value.<p>
     * 
     * @return true if there is a hasTripNumberOfPassengers property value.
     */
    boolean hasHasTripNumberOfPassengers();

    /**
     * Adds a hasTripNumberOfPassengers property value.<p>
     * 
     * @param newHasTripNumberOfPassengers the hasTripNumberOfPassengers property value to be added
     */
    void addHasTripNumberOfPassengers(Integer newHasTripNumberOfPassengers);

    /**
     * Removes a hasTripNumberOfPassengers property value.<p>
     * 
     * @param oldHasTripNumberOfPassengers the hasTripNumberOfPassengers property value to be removed.
     */
    void removeHasTripNumberOfPassengers(Integer oldHasTripNumberOfPassengers);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripRegularTripId
     */
     
    /**
     * Gets all property values for the hasTripRegularTripId property.<p>
     * 
     * @returns a collection of values for the hasTripRegularTripId property.
     */
    Collection<? extends Long> getHasTripRegularTripId();

    /**
     * Checks if the class has a hasTripRegularTripId property value.<p>
     * 
     * @return true if there is a hasTripRegularTripId property value.
     */
    boolean hasHasTripRegularTripId();

    /**
     * Adds a hasTripRegularTripId property value.<p>
     * 
     * @param newHasTripRegularTripId the hasTripRegularTripId property value to be added
     */
    void addHasTripRegularTripId(Long newHasTripRegularTripId);

    /**
     * Removes a hasTripRegularTripId property value.<p>
     * 
     * @param oldHasTripRegularTripId the hasTripRegularTripId property value to be removed.
     */
    void removeHasTripRegularTripId(Long oldHasTripRegularTripId);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripTotalCalories
     */
     
    /**
     * Gets all property values for the hasTripTotalCalories property.<p>
     * 
     * @returns a collection of values for the hasTripTotalCalories property.
     */
    Collection<? extends Object> getHasTripTotalCalories();

    /**
     * Checks if the class has a hasTripTotalCalories property value.<p>
     * 
     * @return true if there is a hasTripTotalCalories property value.
     */
    boolean hasHasTripTotalCalories();

    /**
     * Adds a hasTripTotalCalories property value.<p>
     * 
     * @param newHasTripTotalCalories the hasTripTotalCalories property value to be added
     */
    void addHasTripTotalCalories(Object newHasTripTotalCalories);

    /**
     * Removes a hasTripTotalCalories property value.<p>
     * 
     * @param oldHasTripTotalCalories the hasTripTotalCalories property value to be removed.
     */
    void removeHasTripTotalCalories(Object oldHasTripTotalCalories);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripTotalCost
     */
     
    /**
     * Gets all property values for the hasTripTotalCost property.<p>
     * 
     * @returns a collection of values for the hasTripTotalCost property.
     */
    Collection<? extends Object> getHasTripTotalCost();

    /**
     * Checks if the class has a hasTripTotalCost property value.<p>
     * 
     * @return true if there is a hasTripTotalCost property value.
     */
    boolean hasHasTripTotalCost();

    /**
     * Adds a hasTripTotalCost property value.<p>
     * 
     * @param newHasTripTotalCost the hasTripTotalCost property value to be added
     */
    void addHasTripTotalCost(Object newHasTripTotalCost);

    /**
     * Removes a hasTripTotalCost property value.<p>
     * 
     * @param oldHasTripTotalCost the hasTripTotalCost property value to be removed.
     */
    void removeHasTripTotalCost(Object oldHasTripTotalCost);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripTotalDistance
     */
     
    /**
     * Gets all property values for the hasTripTotalDistance property.<p>
     * 
     * @returns a collection of values for the hasTripTotalDistance property.
     */
    Collection<? extends Object> getHasTripTotalDistance();

    /**
     * Checks if the class has a hasTripTotalDistance property value.<p>
     * 
     * @return true if there is a hasTripTotalDistance property value.
     */
    boolean hasHasTripTotalDistance();

    /**
     * Adds a hasTripTotalDistance property value.<p>
     * 
     * @param newHasTripTotalDistance the hasTripTotalDistance property value to be added
     */
    void addHasTripTotalDistance(Object newHasTripTotalDistance);

    /**
     * Removes a hasTripTotalDistance property value.<p>
     * 
     * @param oldHasTripTotalDistance the hasTripTotalDistance property value to be removed.
     */
    void removeHasTripTotalDistance(Object oldHasTripTotalDistance);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripTotalInfraSegmentDistance
     */
     
    /**
     * Gets all property values for the hasTripTotalInfraSegmentDistance property.<p>
     * 
     * @returns a collection of values for the hasTripTotalInfraSegmentDistance property.
     */
    Collection<? extends Object> getHasTripTotalInfraSegmentDistance();

    /**
     * Checks if the class has a hasTripTotalInfraSegmentDistance property value.<p>
     * 
     * @return true if there is a hasTripTotalInfraSegmentDistance property value.
     */
    boolean hasHasTripTotalInfraSegmentDistance();

    /**
     * Adds a hasTripTotalInfraSegmentDistance property value.<p>
     * 
     * @param newHasTripTotalInfraSegmentDistance the hasTripTotalInfraSegmentDistance property value to be added
     */
    void addHasTripTotalInfraSegmentDistance(Object newHasTripTotalInfraSegmentDistance);

    /**
     * Removes a hasTripTotalInfraSegmentDistance property value.<p>
     * 
     * @param oldHasTripTotalInfraSegmentDistance the hasTripTotalInfraSegmentDistance property value to be removed.
     */
    void removeHasTripTotalInfraSegmentDistance(Object oldHasTripTotalInfraSegmentDistance);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripType
     */
     
    /**
     * Gets all property values for the hasTripType property.<p>
     * 
     * @returns a collection of values for the hasTripType property.
     */
    Collection<? extends Object> getHasTripType();

    /**
     * Checks if the class has a hasTripType property value.<p>
     * 
     * @return true if there is a hasTripType property value.
     */
    boolean hasHasTripType();

    /**
     * Adds a hasTripType property value.<p>
     * 
     * @param newHasTripType the hasTripType property value to be added
     */
    void addHasTripType(Object newHasTripType);

    /**
     * Removes a hasTripType property value.<p>
     * 
     * @param oldHasTripType the hasTripType property value to be removed.
     */
    void removeHasTripType(Object oldHasTripType);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
