package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Education <br>
 * @version generated on Fri May 23 10:57:54 CEST 2014 by cknguyen
 */

public interface Education extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasSchoolAttended
     */
     
    /**
     * Gets all property values for the hasSchoolAttended property.<p>
     * 
     * @returns a collection of values for the hasSchoolAttended property.
     */
    Collection<? extends SchoolAttended> getHasSchoolAttended();

    /**
     * Checks if the class has a hasSchoolAttended property value.<p>
     * 
     * @return true if there is a hasSchoolAttended property value.
     */
    boolean hasHasSchoolAttended();

    /**
     * Adds a hasSchoolAttended property value.<p>
     * 
     * @param newHasSchoolAttended the hasSchoolAttended property value to be added
     */
    void addHasSchoolAttended(SchoolAttended newHasSchoolAttended);

    /**
     * Removes a hasSchoolAttended property value.<p>
     * 
     * @param oldHasSchoolAttended the hasSchoolAttended property value to be removed.
     */
    void removeHasSchoolAttended(SchoolAttended oldHasSchoolAttended);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTakenCourse
     */
     
    /**
     * Gets all property values for the hasTakenCourse property.<p>
     * 
     * @returns a collection of values for the hasTakenCourse property.
     */
    Collection<? extends Course> getHasTakenCourse();

    /**
     * Checks if the class has a hasTakenCourse property value.<p>
     * 
     * @return true if there is a hasTakenCourse property value.
     */
    boolean hasHasTakenCourse();

    /**
     * Adds a hasTakenCourse property value.<p>
     * 
     * @param newHasTakenCourse the hasTakenCourse property value to be added
     */
    void addHasTakenCourse(Course newHasTakenCourse);

    /**
     * Removes a hasTakenCourse property value.<p>
     * 
     * @param oldHasTakenCourse the hasTakenCourse property value to be removed.
     */
    void removeHasTakenCourse(Course oldHasTakenCourse);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasHigestLevelOfAquiredEducation
     */
     
    /**
     * Gets all property values for the hasHigestLevelOfAquiredEducation property.<p>
     * 
     * @returns a collection of values for the hasHigestLevelOfAquiredEducation property.
     */
    Collection<? extends Object> getHasHigestLevelOfAquiredEducation();

    /**
     * Checks if the class has a hasHigestLevelOfAquiredEducation property value.<p>
     * 
     * @return true if there is a hasHigestLevelOfAquiredEducation property value.
     */
    boolean hasHasHigestLevelOfAquiredEducation();

    /**
     * Adds a hasHigestLevelOfAquiredEducation property value.<p>
     * 
     * @param newHasHigestLevelOfAquiredEducation the hasHigestLevelOfAquiredEducation property value to be added
     */
    void addHasHigestLevelOfAquiredEducation(Object newHasHigestLevelOfAquiredEducation);

    /**
     * Removes a hasHigestLevelOfAquiredEducation property value.<p>
     * 
     * @param oldHasHigestLevelOfAquiredEducation the hasHigestLevelOfAquiredEducation property value to be removed.
     */
    void removeHasHigestLevelOfAquiredEducation(Object oldHasHigestLevelOfAquiredEducation);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasKeyTags
     */
     
    /**
     * Gets all property values for the hasKeyTags property.<p>
     * 
     * @returns a collection of values for the hasKeyTags property.
     */
    Collection<? extends String> getHasKeyTags();

    /**
     * Checks if the class has a hasKeyTags property value.<p>
     * 
     * @return true if there is a hasKeyTags property value.
     */
    boolean hasHasKeyTags();

    /**
     * Adds a hasKeyTags property value.<p>
     * 
     * @param newHasKeyTags the hasKeyTags property value to be added
     */
    void addHasKeyTags(String newHasKeyTags);

    /**
     * Removes a hasKeyTags property value.<p>
     * 
     * @param oldHasKeyTags the hasKeyTags property value to be removed.
     */
    void removeHasKeyTags(String oldHasKeyTags);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
