package eu.threecixty.models;

import eu.threecixty.models.impl.*;

import java.util.Collection;

import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;

import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * A class that serves as the entry point to the generated code providing access
 * to existing individuals in the ontology and the ability to create new individuals in the ontology.<p>
 * 
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: MyFactory<br>
 * @version generated on Fri May 23 10:57:54 CEST 2014 by cknguyen
 */
public class MyFactory implements CodeGenerationFactory {
    private OWLOntology ontology;
    private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
    private FactoryHelper delegate;
    private CodeGenerationInference inference;

    public MyFactory(OWLOntology ontology) {
	    this(ontology, new SimpleInference(ontology));
    }
    
    public MyFactory(OWLOntology ontology, CodeGenerationInference inference) {
        this.ontology = ontology;
        this.inference = inference;
        javaMapping.initialize(ontology, inference);
        delegate = new FactoryHelper(ontology, inference);
    }

    public OWLOntology getOwlOntology() {
        return ontology;
    }
    
    public void saveOwlOntology() throws OWLOntologyStorageException {
        ontology.getOWLOntologyManager().saveOntology(ontology);
    }
    
    public void flushOwlReasoner() {
        delegate.flushOwlReasoner();
    }
    
    public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface) {
    	return javaMapping.canAs(resource, javaInterface);
    }
    
    public  <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface) {
    	return javaMapping.as(resource, javaInterface);
    }
    
    public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls) {
        return javaMapping.getJavaInterfaceFromOwlClass(cls);
    }
    
    public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface) {
	    return javaMapping.getOwlClassFromJavaInterface(javaInterface);
    }
    
    public CodeGenerationInference getInference() {
        return inference;
    }

    /* ***************************************************
     * Class http://purl.org/dc/dcmitype/Event
     */

    {
        javaMapping.add("http://purl.org/dc/dcmitype/Event", Event.class, DefaultEvent.class);
    }

    /**
     * Creates an instance of type Event.  Modifies the underlying ontology.
     */
    public Event createEvent(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EVENT, DefaultEvent.class);
    }

    /**
     * Gets an instance of type Event with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Event getEvent(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EVENT, DefaultEvent.class);
    }

    /**
     * Gets all instances of Event from the ontology.
     */
    public Collection<? extends Event> getAllEventInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EVENT, DefaultEvent.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Accompanying
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Accompanying", Accompanying.class, DefaultAccompanying.class);
    }

    /**
     * Creates an instance of type Accompanying.  Modifies the underlying ontology.
     */
    public Accompanying createAccompanying(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ACCOMPANYING, DefaultAccompanying.class);
    }

    /**
     * Gets an instance of type Accompanying with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Accompanying getAccompanying(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ACCOMPANYING, DefaultAccompanying.class);
    }

    /**
     * Gets all instances of Accompanying from the ontology.
     */
    public Collection<? extends Accompanying> getAllAccompanyingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ACCOMPANYING, DefaultAccompanying.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Course
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Course", Course.class, DefaultCourse.class);
    }

    /**
     * Creates an instance of type Course.  Modifies the underlying ontology.
     */
    public Course createCourse(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_COURSE, DefaultCourse.class);
    }

    /**
     * Gets an instance of type Course with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Course getCourse(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_COURSE, DefaultCourse.class);
    }

    /**
     * Gets all instances of Course from the ontology.
     */
    public Collection<? extends Course> getAllCourseInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_COURSE, DefaultCourse.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Education
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Education", Education.class, DefaultEducation.class);
    }

    /**
     * Creates an instance of type Education.  Modifies the underlying ontology.
     */
    public Education createEducation(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EDUCATION, DefaultEducation.class);
    }

    /**
     * Gets an instance of type Education with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Education getEducation(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EDUCATION, DefaultEducation.class);
    }

    /**
     * Gets all instances of Education from the ontology.
     */
    public Collection<? extends Education> getAllEducationInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EDUCATION, DefaultEducation.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Employer
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Employer", Employer.class, DefaultEmployer.class);
    }

    /**
     * Creates an instance of type Employer.  Modifies the underlying ontology.
     */
    public Employer createEmployer(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EMPLOYER, DefaultEmployer.class);
    }

    /**
     * Gets an instance of type Employer with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Employer getEmployer(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EMPLOYER, DefaultEmployer.class);
    }

    /**
     * Gets all instances of Employer from the ontology.
     */
    public Collection<? extends Employer> getAllEmployerInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EMPLOYER, DefaultEmployer.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#EmployerInformation
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#EmployerInformation", EmployerInformation.class, DefaultEmployerInformation.class);
    }

    /**
     * Creates an instance of type EmployerInformation.  Modifies the underlying ontology.
     */
    public EmployerInformation createEmployerInformation(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EMPLOYERINFORMATION, DefaultEmployerInformation.class);
    }

    /**
     * Gets an instance of type EmployerInformation with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public EmployerInformation getEmployerInformation(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EMPLOYERINFORMATION, DefaultEmployerInformation.class);
    }

    /**
     * Gets all instances of EmployerInformation from the ontology.
     */
    public Collection<? extends EmployerInformation> getAllEmployerInformationInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EMPLOYERINFORMATION, DefaultEmployerInformation.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#EventDetailPreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#EventDetailPreference", EventDetailPreference.class, DefaultEventDetailPreference.class);
    }

    /**
     * Creates an instance of type EventDetailPreference.  Modifies the underlying ontology.
     */
    public EventDetailPreference createEventDetailPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EVENTDETAILPREFERENCE, DefaultEventDetailPreference.class);
    }

    /**
     * Gets an instance of type EventDetailPreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public EventDetailPreference getEventDetailPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EVENTDETAILPREFERENCE, DefaultEventDetailPreference.class);
    }

    /**
     * Gets all instances of EventDetailPreference from the ontology.
     */
    public Collection<? extends EventDetailPreference> getAllEventDetailPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EVENTDETAILPREFERENCE, DefaultEventDetailPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#EventDetails
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#EventDetails", EventDetails.class, DefaultEventDetails.class);
    }

    /**
     * Creates an instance of type EventDetails.  Modifies the underlying ontology.
     */
    public EventDetails createEventDetails(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EVENTDETAILS, DefaultEventDetails.class);
    }

    /**
     * Gets an instance of type EventDetails with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public EventDetails getEventDetails(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EVENTDETAILS, DefaultEventDetails.class);
    }

    /**
     * Gets all instances of EventDetails from the ontology.
     */
    public Collection<? extends EventDetails> getAllEventDetailsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EVENTDETAILS, DefaultEventDetails.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#EventPreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#EventPreference", EventPreference.class, DefaultEventPreference.class);
    }

    /**
     * Creates an instance of type EventPreference.  Modifies the underlying ontology.
     */
    public EventPreference createEventPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EVENTPREFERENCE, DefaultEventPreference.class);
    }

    /**
     * Gets an instance of type EventPreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public EventPreference getEventPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EVENTPREFERENCE, DefaultEventPreference.class);
    }

    /**
     * Gets all instances of EventPreference from the ontology.
     */
    public Collection<? extends EventPreference> getAllEventPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EVENTPREFERENCE, DefaultEventPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#HotelDetail
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#HotelDetail", HotelDetail.class, DefaultHotelDetail.class);
    }

    /**
     * Creates an instance of type HotelDetail.  Modifies the underlying ontology.
     */
    public HotelDetail createHotelDetail(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_HOTELDETAIL, DefaultHotelDetail.class);
    }

    /**
     * Gets an instance of type HotelDetail with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public HotelDetail getHotelDetail(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_HOTELDETAIL, DefaultHotelDetail.class);
    }

    /**
     * Gets all instances of HotelDetail from the ontology.
     */
    public Collection<? extends HotelDetail> getAllHotelDetailInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_HOTELDETAIL, DefaultHotelDetail.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#HotelDetailPreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#HotelDetailPreference", HotelDetailPreference.class, DefaultHotelDetailPreference.class);
    }

    /**
     * Creates an instance of type HotelDetailPreference.  Modifies the underlying ontology.
     */
    public HotelDetailPreference createHotelDetailPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_HOTELDETAILPREFERENCE, DefaultHotelDetailPreference.class);
    }

    /**
     * Gets an instance of type HotelDetailPreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public HotelDetailPreference getHotelDetailPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_HOTELDETAILPREFERENCE, DefaultHotelDetailPreference.class);
    }

    /**
     * Gets all instances of HotelDetailPreference from the ontology.
     */
    public Collection<? extends HotelDetailPreference> getAllHotelDetailPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_HOTELDETAILPREFERENCE, DefaultHotelDetailPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#HotelPreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#HotelPreference", HotelPreference.class, DefaultHotelPreference.class);
    }

    /**
     * Creates an instance of type HotelPreference.  Modifies the underlying ontology.
     */
    public HotelPreference createHotelPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_HOTELPREFERENCE, DefaultHotelPreference.class);
    }

    /**
     * Gets an instance of type HotelPreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public HotelPreference getHotelPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_HOTELPREFERENCE, DefaultHotelPreference.class);
    }

    /**
     * Gets all instances of HotelPreference from the ontology.
     */
    public Collection<? extends HotelPreference> getAllHotelPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_HOTELPREFERENCE, DefaultHotelPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#InfraRoute
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#InfraRoute", InfraRoute.class, DefaultInfraRoute.class);
    }

    /**
     * Creates an instance of type InfraRoute.  Modifies the underlying ontology.
     */
    public InfraRoute createInfraRoute(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INFRAROUTE, DefaultInfraRoute.class);
    }

    /**
     * Gets an instance of type InfraRoute with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public InfraRoute getInfraRoute(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INFRAROUTE, DefaultInfraRoute.class);
    }

    /**
     * Gets all instances of InfraRoute from the ontology.
     */
    public Collection<? extends InfraRoute> getAllInfraRouteInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INFRAROUTE, DefaultInfraRoute.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Language
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Language", Language.class, DefaultLanguage.class);
    }

    /**
     * Creates an instance of type Language.  Modifies the underlying ontology.
     */
    public Language createLanguage(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LANGUAGE, DefaultLanguage.class);
    }

    /**
     * Gets an instance of type Language with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Language getLanguage(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LANGUAGE, DefaultLanguage.class);
    }

    /**
     * Gets all instances of Language from the ontology.
     */
    public Collection<? extends Language> getAllLanguageInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LANGUAGE, DefaultLanguage.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#LanguageDetails
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#LanguageDetails", LanguageDetails.class, DefaultLanguageDetails.class);
    }

    /**
     * Creates an instance of type LanguageDetails.  Modifies the underlying ontology.
     */
    public LanguageDetails createLanguageDetails(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LANGUAGEDETAILS, DefaultLanguageDetails.class);
    }

    /**
     * Gets an instance of type LanguageDetails with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public LanguageDetails getLanguageDetails(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LANGUAGEDETAILS, DefaultLanguageDetails.class);
    }

    /**
     * Gets all instances of LanguageDetails from the ontology.
     */
    public Collection<? extends LanguageDetails> getAllLanguageDetailsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LANGUAGEDETAILS, DefaultLanguageDetails.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Like
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Like", Like.class, DefaultLike.class);
    }

    /**
     * Creates an instance of type Like.  Modifies the underlying ontology.
     */
    public Like createLike(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LIKE, DefaultLike.class);
    }

    /**
     * Gets an instance of type Like with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Like getLike(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LIKE, DefaultLike.class);
    }

    /**
     * Gets all instances of Like from the ontology.
     */
    public Collection<? extends Like> getAllLikeInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LIKE, DefaultLike.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#MappedLocation
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#MappedLocation", MappedLocation.class, DefaultMappedLocation.class);
    }

    /**
     * Creates an instance of type MappedLocation.  Modifies the underlying ontology.
     */
    public MappedLocation createMappedLocation(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MAPPEDLOCATION, DefaultMappedLocation.class);
    }

    /**
     * Gets an instance of type MappedLocation with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public MappedLocation getMappedLocation(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MAPPEDLOCATION, DefaultMappedLocation.class);
    }

    /**
     * Gets all instances of MappedLocation from the ontology.
     */
    public Collection<? extends MappedLocation> getAllMappedLocationInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MAPPEDLOCATION, DefaultMappedLocation.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Measurement
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Measurement", Measurement.class, DefaultMeasurement.class);
    }

    /**
     * Creates an instance of type Measurement.  Modifies the underlying ontology.
     */
    public Measurement createMeasurement(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MEASUREMENT, DefaultMeasurement.class);
    }

    /**
     * Gets an instance of type Measurement with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Measurement getMeasurement(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MEASUREMENT, DefaultMeasurement.class);
    }

    /**
     * Gets all instances of Measurement from the ontology.
     */
    public Collection<? extends Measurement> getAllMeasurementInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MEASUREMENT, DefaultMeasurement.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#ModalityStatistics
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#ModalityStatistics", ModalityStatistics.class, DefaultModalityStatistics.class);
    }

    /**
     * Creates an instance of type ModalityStatistics.  Modifies the underlying ontology.
     */
    public ModalityStatistics createModalityStatistics(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MODALITYSTATISTICS, DefaultModalityStatistics.class);
    }

    /**
     * Gets an instance of type ModalityStatistics with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public ModalityStatistics getModalityStatistics(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MODALITYSTATISTICS, DefaultModalityStatistics.class);
    }

    /**
     * Gets all instances of ModalityStatistics from the ontology.
     */
    public Collection<? extends ModalityStatistics> getAllModalityStatisticsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MODALITYSTATISTICS, DefaultModalityStatistics.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#PersonalPlace
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#PersonalPlace", PersonalPlace.class, DefaultPersonalPlace.class);
    }

    /**
     * Creates an instance of type PersonalPlace.  Modifies the underlying ontology.
     */
    public PersonalPlace createPersonalPlace(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PERSONALPLACE, DefaultPersonalPlace.class);
    }

    /**
     * Gets an instance of type PersonalPlace with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public PersonalPlace getPersonalPlace(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PERSONALPLACE, DefaultPersonalPlace.class);
    }

    /**
     * Gets all instances of PersonalPlace from the ontology.
     */
    public Collection<? extends PersonalPlace> getAllPersonalPlaceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PERSONALPLACE, DefaultPersonalPlace.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#PlaceDetail
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#PlaceDetail", PlaceDetail.class, DefaultPlaceDetail.class);
    }

    /**
     * Creates an instance of type PlaceDetail.  Modifies the underlying ontology.
     */
    public PlaceDetail createPlaceDetail(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLACEDETAIL, DefaultPlaceDetail.class);
    }

    /**
     * Gets an instance of type PlaceDetail with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public PlaceDetail getPlaceDetail(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLACEDETAIL, DefaultPlaceDetail.class);
    }

    /**
     * Gets all instances of PlaceDetail from the ontology.
     */
    public Collection<? extends PlaceDetail> getAllPlaceDetailInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLACEDETAIL, DefaultPlaceDetail.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#PlaceDetailPreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#PlaceDetailPreference", PlaceDetailPreference.class, DefaultPlaceDetailPreference.class);
    }

    /**
     * Creates an instance of type PlaceDetailPreference.  Modifies the underlying ontology.
     */
    public PlaceDetailPreference createPlaceDetailPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLACEDETAILPREFERENCE, DefaultPlaceDetailPreference.class);
    }

    /**
     * Gets an instance of type PlaceDetailPreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public PlaceDetailPreference getPlaceDetailPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLACEDETAILPREFERENCE, DefaultPlaceDetailPreference.class);
    }

    /**
     * Gets all instances of PlaceDetailPreference from the ontology.
     */
    public Collection<? extends PlaceDetailPreference> getAllPlaceDetailPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLACEDETAILPREFERENCE, DefaultPlaceDetailPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#PlacePreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#PlacePreference", PlacePreference.class, DefaultPlacePreference.class);
    }

    /**
     * Creates an instance of type PlacePreference.  Modifies the underlying ontology.
     */
    public PlacePreference createPlacePreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLACEPREFERENCE, DefaultPlacePreference.class);
    }

    /**
     * Gets an instance of type PlacePreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public PlacePreference getPlacePreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLACEPREFERENCE, DefaultPlacePreference.class);
    }

    /**
     * Gets all instances of PlacePreference from the ontology.
     */
    public Collection<? extends PlacePreference> getAllPlacePreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLACEPREFERENCE, DefaultPlacePreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Preference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Preference", Preference.class, DefaultPreference.class);
    }

    /**
     * Creates an instance of type Preference.  Modifies the underlying ontology.
     */
    public Preference createPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PREFERENCE, DefaultPreference.class);
    }

    /**
     * Gets an instance of type Preference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Preference getPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PREFERENCE, DefaultPreference.class);
    }

    /**
     * Gets all instances of Preference from the ontology.
     */
    public Collection<? extends Preference> getAllPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PREFERENCE, DefaultPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#ProfileIdentities
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#ProfileIdentities", ProfileIdentities.class, DefaultProfileIdentities.class);
    }

    /**
     * Creates an instance of type ProfileIdentities.  Modifies the underlying ontology.
     */
    public ProfileIdentities createProfileIdentities(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PROFILEIDENTITIES, DefaultProfileIdentities.class);
    }

    /**
     * Gets an instance of type ProfileIdentities with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public ProfileIdentities getProfileIdentities(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PROFILEIDENTITIES, DefaultProfileIdentities.class);
    }

    /**
     * Gets all instances of ProfileIdentities from the ontology.
     */
    public Collection<? extends ProfileIdentities> getAllProfileIdentitiesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PROFILEIDENTITIES, DefaultProfileIdentities.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#QueryHistory
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#QueryHistory", QueryHistory.class, DefaultQueryHistory.class);
    }

    /**
     * Creates an instance of type QueryHistory.  Modifies the underlying ontology.
     */
    public QueryHistory createQueryHistory(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_QUERYHISTORY, DefaultQueryHistory.class);
    }

    /**
     * Gets an instance of type QueryHistory with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public QueryHistory getQueryHistory(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_QUERYHISTORY, DefaultQueryHistory.class);
    }

    /**
     * Gets all instances of QueryHistory from the ontology.
     */
    public Collection<? extends QueryHistory> getAllQueryHistoryInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_QUERYHISTORY, DefaultQueryHistory.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Rating
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Rating", Rating.class, DefaultRating.class);
    }

    /**
     * Creates an instance of type Rating.  Modifies the underlying ontology.
     */
    public Rating createRating(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_RATING, DefaultRating.class);
    }

    /**
     * Gets an instance of type Rating with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Rating getRating(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_RATING, DefaultRating.class);
    }

    /**
     * Gets all instances of Rating from the ontology.
     */
    public Collection<? extends Rating> getAllRatingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_RATING, DefaultRating.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#RatingPreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#RatingPreference", RatingPreference.class, DefaultRatingPreference.class);
    }

    /**
     * Creates an instance of type RatingPreference.  Modifies the underlying ontology.
     */
    public RatingPreference createRatingPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_RATINGPREFERENCE, DefaultRatingPreference.class);
    }

    /**
     * Gets an instance of type RatingPreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public RatingPreference getRatingPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_RATINGPREFERENCE, DefaultRatingPreference.class);
    }

    /**
     * Gets all instances of RatingPreference from the ontology.
     */
    public Collection<? extends RatingPreference> getAllRatingPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_RATINGPREFERENCE, DefaultRatingPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#RegularTrip
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#RegularTrip", RegularTrip.class, DefaultRegularTrip.class);
    }

    /**
     * Creates an instance of type RegularTrip.  Modifies the underlying ontology.
     */
    public RegularTrip createRegularTrip(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGULARTRIP, DefaultRegularTrip.class);
    }

    /**
     * Gets an instance of type RegularTrip with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public RegularTrip getRegularTrip(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGULARTRIP, DefaultRegularTrip.class);
    }

    /**
     * Gets all instances of RegularTrip from the ontology.
     */
    public Collection<? extends RegularTrip> getAllRegularTripInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGULARTRIP, DefaultRegularTrip.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#School
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#School", School.class, DefaultSchool.class);
    }

    /**
     * Creates an instance of type School.  Modifies the underlying ontology.
     */
    public School createSchool(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SCHOOL, DefaultSchool.class);
    }

    /**
     * Gets an instance of type School with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public School getSchool(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SCHOOL, DefaultSchool.class);
    }

    /**
     * Gets all instances of School from the ontology.
     */
    public Collection<? extends School> getAllSchoolInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SCHOOL, DefaultSchool.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#SchoolAttended
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#SchoolAttended", SchoolAttended.class, DefaultSchoolAttended.class);
    }

    /**
     * Creates an instance of type SchoolAttended.  Modifies the underlying ontology.
     */
    public SchoolAttended createSchoolAttended(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SCHOOLATTENDED, DefaultSchoolAttended.class);
    }

    /**
     * Gets an instance of type SchoolAttended with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public SchoolAttended getSchoolAttended(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SCHOOLATTENDED, DefaultSchoolAttended.class);
    }

    /**
     * Gets all instances of SchoolAttended from the ontology.
     */
    public Collection<? extends SchoolAttended> getAllSchoolAttendedInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SCHOOLATTENDED, DefaultSchoolAttended.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Skill
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Skill", Skill.class, DefaultSkill.class);
    }

    /**
     * Creates an instance of type Skill.  Modifies the underlying ontology.
     */
    public Skill createSkill(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SKILL, DefaultSkill.class);
    }

    /**
     * Gets an instance of type Skill with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Skill getSkill(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SKILL, DefaultSkill.class);
    }

    /**
     * Gets all instances of Skill from the ontology.
     */
    public Collection<? extends Skill> getAllSkillInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SKILL, DefaultSkill.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#SocialPreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#SocialPreference", SocialPreference.class, DefaultSocialPreference.class);
    }

    /**
     * Creates an instance of type SocialPreference.  Modifies the underlying ontology.
     */
    public SocialPreference createSocialPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SOCIALPREFERENCE, DefaultSocialPreference.class);
    }

    /**
     * Gets an instance of type SocialPreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public SocialPreference getSocialPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SOCIALPREFERENCE, DefaultSocialPreference.class);
    }

    /**
     * Gets all instances of SocialPreference from the ontology.
     */
    public Collection<? extends SocialPreference> getAllSocialPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SOCIALPREFERENCE, DefaultSocialPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#TemporalDetails
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#TemporalDetails", TemporalDetails.class, DefaultTemporalDetails.class);
    }

    /**
     * Creates an instance of type TemporalDetails.  Modifies the underlying ontology.
     */
    public TemporalDetails createTemporalDetails(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TEMPORALDETAILS, DefaultTemporalDetails.class);
    }

    /**
     * Gets an instance of type TemporalDetails with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public TemporalDetails getTemporalDetails(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TEMPORALDETAILS, DefaultTemporalDetails.class);
    }

    /**
     * Gets all instances of TemporalDetails from the ontology.
     */
    public Collection<? extends TemporalDetails> getAllTemporalDetailsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TEMPORALDETAILS, DefaultTemporalDetails.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Transport
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Transport", Transport.class, DefaultTransport.class);
    }

    /**
     * Creates an instance of type Transport.  Modifies the underlying ontology.
     */
    public Transport createTransport(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TRANSPORT, DefaultTransport.class);
    }

    /**
     * Gets an instance of type Transport with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Transport getTransport(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TRANSPORT, DefaultTransport.class);
    }

    /**
     * Gets all instances of Transport from the ontology.
     */
    public Collection<? extends Transport> getAllTransportInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TRANSPORT, DefaultTransport.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Trip
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Trip", Trip.class, DefaultTrip.class);
    }

    /**
     * Creates an instance of type Trip.  Modifies the underlying ontology.
     */
    public Trip createTrip(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TRIP, DefaultTrip.class);
    }

    /**
     * Gets an instance of type Trip with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Trip getTrip(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TRIP, DefaultTrip.class);
    }

    /**
     * Gets all instances of Trip from the ontology.
     */
    public Collection<? extends Trip> getAllTripInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TRIP, DefaultTrip.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#TripMeasurement
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#TripMeasurement", TripMeasurement.class, DefaultTripMeasurement.class);
    }

    /**
     * Creates an instance of type TripMeasurement.  Modifies the underlying ontology.
     */
    public TripMeasurement createTripMeasurement(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TRIPMEASUREMENT, DefaultTripMeasurement.class);
    }

    /**
     * Gets an instance of type TripMeasurement with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public TripMeasurement getTripMeasurement(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TRIPMEASUREMENT, DefaultTripMeasurement.class);
    }

    /**
     * Gets all instances of TripMeasurement from the ontology.
     */
    public Collection<? extends TripMeasurement> getAllTripMeasurementInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TRIPMEASUREMENT, DefaultTripMeasurement.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#TripPreference
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#TripPreference", TripPreference.class, DefaultTripPreference.class);
    }

    /**
     * Creates an instance of type TripPreference.  Modifies the underlying ontology.
     */
    public TripPreference createTripPreference(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TRIPPREFERENCE, DefaultTripPreference.class);
    }

    /**
     * Gets an instance of type TripPreference with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public TripPreference getTripPreference(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TRIPPREFERENCE, DefaultTripPreference.class);
    }

    /**
     * Gets all instances of TripPreference from the ontology.
     */
    public Collection<? extends TripPreference> getAllTripPreferenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TRIPPREFERENCE, DefaultTripPreference.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#UserEnteredRatings
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#UserEnteredRatings", UserEnteredRatings.class, DefaultUserEnteredRatings.class);
    }

    /**
     * Creates an instance of type UserEnteredRatings.  Modifies the underlying ontology.
     */
    public UserEnteredRatings createUserEnteredRatings(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_USERENTEREDRATINGS, DefaultUserEnteredRatings.class);
    }

    /**
     * Gets an instance of type UserEnteredRatings with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public UserEnteredRatings getUserEnteredRatings(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_USERENTEREDRATINGS, DefaultUserEnteredRatings.class);
    }

    /**
     * Gets all instances of UserEnteredRatings from the ontology.
     */
    public Collection<? extends UserEnteredRatings> getAllUserEnteredRatingsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_USERENTEREDRATINGS, DefaultUserEnteredRatings.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#UserEventRating
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#UserEventRating", UserEventRating.class, DefaultUserEventRating.class);
    }

    /**
     * Creates an instance of type UserEventRating.  Modifies the underlying ontology.
     */
    public UserEventRating createUserEventRating(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_USEREVENTRATING, DefaultUserEventRating.class);
    }

    /**
     * Gets an instance of type UserEventRating with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public UserEventRating getUserEventRating(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_USEREVENTRATING, DefaultUserEventRating.class);
    }

    /**
     * Gets all instances of UserEventRating from the ontology.
     */
    public Collection<? extends UserEventRating> getAllUserEventRatingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_USEREVENTRATING, DefaultUserEventRating.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#UserHotelRating
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#UserHotelRating", UserHotelRating.class, DefaultUserHotelRating.class);
    }

    /**
     * Creates an instance of type UserHotelRating.  Modifies the underlying ontology.
     */
    public UserHotelRating createUserHotelRating(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_USERHOTELRATING, DefaultUserHotelRating.class);
    }

    /**
     * Gets an instance of type UserHotelRating with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public UserHotelRating getUserHotelRating(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_USERHOTELRATING, DefaultUserHotelRating.class);
    }

    /**
     * Gets all instances of UserHotelRating from the ontology.
     */
    public Collection<? extends UserHotelRating> getAllUserHotelRatingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_USERHOTELRATING, DefaultUserHotelRating.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#UserPlaceRating
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#UserPlaceRating", UserPlaceRating.class, DefaultUserPlaceRating.class);
    }

    /**
     * Creates an instance of type UserPlaceRating.  Modifies the underlying ontology.
     */
    public UserPlaceRating createUserPlaceRating(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_USERPLACERATING, DefaultUserPlaceRating.class);
    }

    /**
     * Gets an instance of type UserPlaceRating with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public UserPlaceRating getUserPlaceRating(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_USERPLACERATING, DefaultUserPlaceRating.class);
    }

    /**
     * Gets all instances of UserPlaceRating from the ontology.
     */
    public Collection<? extends UserPlaceRating> getAllUserPlaceRatingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_USERPLACERATING, DefaultUserPlaceRating.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#UserProfile
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#UserProfile", UserProfile.class, DefaultUserProfile.class);
    }

    /**
     * Creates an instance of type UserProfile.  Modifies the underlying ontology.
     */
    public UserProfile createUserProfile(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_USERPROFILE, DefaultUserProfile.class);
    }

    /**
     * Gets an instance of type UserProfile with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public UserProfile getUserProfile(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_USERPROFILE, DefaultUserProfile.class);
    }

    /**
     * Gets all instances of UserProfile from the ontology.
     */
    public Collection<? extends UserProfile> getAllUserProfileInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_USERPROFILE, DefaultUserProfile.class);
    }


    /* ***************************************************
     * Class http://www.eu.3cixty.org/profile#Weather
     */

    {
        javaMapping.add("http://www.eu.3cixty.org/profile#Weather", Weather.class, DefaultWeather.class);
    }

    /**
     * Creates an instance of type Weather.  Modifies the underlying ontology.
     */
    public Weather createWeather(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_WEATHER, DefaultWeather.class);
    }

    /**
     * Gets an instance of type Weather with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Weather getWeather(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_WEATHER, DefaultWeather.class);
    }

    /**
     * Gets all instances of Weather from the ontology.
     */
    public Collection<? extends Weather> getAllWeatherInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_WEATHER, DefaultWeather.class);
    }


    /* ***************************************************
     * Class http://www.w3.org/2006/vcard/ns#Address
     */

    {
        javaMapping.add("http://www.w3.org/2006/vcard/ns#Address", Address.class, DefaultAddress.class);
    }

    /**
     * Creates an instance of type Address.  Modifies the underlying ontology.
     */
    public Address createAddress(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ADDRESS, DefaultAddress.class);
    }

    /**
     * Gets an instance of type Address with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Address getAddress(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ADDRESS, DefaultAddress.class);
    }

    /**
     * Gets all instances of Address from the ontology.
     */
    public Collection<? extends Address> getAllAddressInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ADDRESS, DefaultAddress.class);
    }


    /* ***************************************************
     * Class http://www.w3.org/2006/vcard/ns#Name
     */

    {
        javaMapping.add("http://www.w3.org/2006/vcard/ns#Name", Name.class, DefaultName.class);
    }

    /**
     * Creates an instance of type Name.  Modifies the underlying ontology.
     */
    public Name createName(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_NAME, DefaultName.class);
    }

    /**
     * Gets an instance of type Name with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Name getName(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_NAME, DefaultName.class);
    }

    /**
     * Gets all instances of Name from the ontology.
     */
    public Collection<? extends Name> getAllNameInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_NAME, DefaultName.class);
    }


}
