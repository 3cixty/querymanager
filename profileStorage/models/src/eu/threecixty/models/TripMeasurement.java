package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: TripMeasurement <br>
 * @version generated on Mon Jun 02 16:02:21 CEST 2014 by ragarwal
 */

public interface TripMeasurement extends Measurement {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasMeasurement
     */
     
    /**
     * Gets all property values for the hasMeasurement property.<p>
     * 
     * @returns a collection of values for the hasMeasurement property.
     */
    Collection<? extends Measurement> getHasMeasurement();

    /**
     * Checks if the class has a hasMeasurement property value.<p>
     * 
     * @return true if there is a hasMeasurement property value.
     */
    boolean hasHasMeasurement();

    /**
     * Adds a hasMeasurement property value.<p>
     * 
     * @param newHasMeasurement the hasMeasurement property value to be added
     */
    void addHasMeasurement(Measurement newHasMeasurement);

    /**
     * Removes a hasMeasurement property value.<p>
     * 
     * @param oldHasMeasurement the hasMeasurement property value to be removed.
     */
    void removeHasMeasurement(Measurement oldHasMeasurement);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTrip
     */
     
    /**
     * Gets all property values for the hasTrip property.<p>
     * 
     * @returns a collection of values for the hasTrip property.
     */
    Collection<? extends Trip> getHasTrip();

    /**
     * Checks if the class has a hasTrip property value.<p>
     * 
     * @return true if there is a hasTrip property value.
     */
    boolean hasHasTrip();

    /**
     * Adds a hasTrip property value.<p>
     * 
     * @param newHasTrip the hasTrip property value to be added
     */
    void addHasTrip(Trip newHasTrip);

    /**
     * Removes a hasTrip property value.<p>
     * 
     * @param oldHasTrip the hasTrip property value to be removed.
     */
    void removeHasTrip(Trip oldHasTrip);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasDataQuality
     */
     
    /**
     * Gets all property values for the hasDataQuality property.<p>
     * 
     * @returns a collection of values for the hasDataQuality property.
     */
    Collection<? extends Object> getHasDataQuality();

    /**
     * Checks if the class has a hasDataQuality property value.<p>
     * 
     * @return true if there is a hasDataQuality property value.
     */
    boolean hasHasDataQuality();

    /**
     * Adds a hasDataQuality property value.<p>
     * 
     * @param newHasDataQuality the hasDataQuality property value to be added
     */
    void addHasDataQuality(Object newHasDataQuality);

    /**
     * Removes a hasDataQuality property value.<p>
     * 
     * @param oldHasDataQuality the hasDataQuality property value to be removed.
     */
    void removeHasDataQuality(Object oldHasDataQuality);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasMeasurementID
     */
     
    /**
     * Gets all property values for the hasMeasurementID property.<p>
     * 
     * @returns a collection of values for the hasMeasurementID property.
     */
    Collection<? extends Long> getHasMeasurementID();

    /**
     * Checks if the class has a hasMeasurementID property value.<p>
     * 
     * @return true if there is a hasMeasurementID property value.
     */
    boolean hasHasMeasurementID();

    /**
     * Adds a hasMeasurementID property value.<p>
     * 
     * @param newHasMeasurementID the hasMeasurementID property value to be added
     */
    void addHasMeasurementID(Long newHasMeasurementID);

    /**
     * Removes a hasMeasurementID property value.<p>
     * 
     * @param oldHasMeasurementID the hasMeasurementID property value to be removed.
     */
    void removeHasMeasurementID(Long oldHasMeasurementID);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasMeasurementTime
     */
     
    /**
     * Gets all property values for the hasMeasurementTime property.<p>
     * 
     * @returns a collection of values for the hasMeasurementTime property.
     */
    Collection<? extends Long> getHasMeasurementTime();

    /**
     * Checks if the class has a hasMeasurementTime property value.<p>
     * 
     * @return true if there is a hasMeasurementTime property value.
     */
    boolean hasHasMeasurementTime();

    /**
     * Adds a hasMeasurementTime property value.<p>
     * 
     * @param newHasMeasurementTime the hasMeasurementTime property value to be added
     */
    void addHasMeasurementTime(Long newHasMeasurementTime);

    /**
     * Removes a hasMeasurementTime property value.<p>
     * 
     * @param oldHasMeasurementTime the hasMeasurementTime property value to be removed.
     */
    void removeHasMeasurementTime(Long oldHasMeasurementTime);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasMeasurementTimeZone
     */
     
    /**
     * Gets all property values for the hasMeasurementTimeZone property.<p>
     * 
     * @returns a collection of values for the hasMeasurementTimeZone property.
     */
    Collection<? extends Long> getHasMeasurementTimeZone();

    /**
     * Checks if the class has a hasMeasurementTimeZone property value.<p>
     * 
     * @return true if there is a hasMeasurementTimeZone property value.
     */
    boolean hasHasMeasurementTimeZone();

    /**
     * Adds a hasMeasurementTimeZone property value.<p>
     * 
     * @param newHasMeasurementTimeZone the hasMeasurementTimeZone property value to be added
     */
    void addHasMeasurementTimeZone(Long newHasMeasurementTimeZone);

    /**
     * Removes a hasMeasurementTimeZone property value.<p>
     * 
     * @param oldHasMeasurementTimeZone the hasMeasurementTimeZone property value to be removed.
     */
    void removeHasMeasurementTimeZone(Long oldHasMeasurementTimeZone);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasMeasurementValidity
     */
     
    /**
     * Gets all property values for the hasMeasurementValidity property.<p>
     * 
     * @returns a collection of values for the hasMeasurementValidity property.
     */
    Collection<? extends Long> getHasMeasurementValidity();

    /**
     * Checks if the class has a hasMeasurementValidity property value.<p>
     * 
     * @return true if there is a hasMeasurementValidity property value.
     */
    boolean hasHasMeasurementValidity();

    /**
     * Adds a hasMeasurementValidity property value.<p>
     * 
     * @param newHasMeasurementValidity the hasMeasurementValidity property value to be added
     */
    void addHasMeasurementValidity(Long newHasMeasurementValidity);

    /**
     * Removes a hasMeasurementValidity property value.<p>
     * 
     * @param oldHasMeasurementValidity the hasMeasurementValidity property value to be removed.
     */
    void removeHasMeasurementValidity(Long oldHasMeasurementValidity);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasUID
     */
     
    /**
     * Gets all property values for the hasUID property.<p>
     * 
     * @returns a collection of values for the hasUID property.
     */
    Collection<? extends String> getHasUID();

    /**
     * Checks if the class has a hasUID property value.<p>
     * 
     * @return true if there is a hasUID property value.
     */
    boolean hasHasUID();

    /**
     * Adds a hasUID property value.<p>
     * 
     * @param newHasUID the hasUID property value to be added
     */
    void addHasUID(String newHasUID);

    /**
     * Removes a hasUID property value.<p>
     * 
     * @param oldHasUID the hasUID property value to be removed.
     */
    void removeHasUID(String oldHasUID);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
