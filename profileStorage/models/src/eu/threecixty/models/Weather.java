package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Weather <br>
 * @version generated on Mon Jun 02 16:02:21 CEST 2014 by ragarwal
 */

public interface Weather extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasCondition
     */
     
    /**
     * Gets all property values for the hasCondition property.<p>
     * 
     * @returns a collection of values for the hasCondition property.
     */
    Collection<? extends String> getHasCondition();

    /**
     * Checks if the class has a hasCondition property value.<p>
     * 
     * @return true if there is a hasCondition property value.
     */
    boolean hasHasCondition();

    /**
     * Adds a hasCondition property value.<p>
     * 
     * @param newHasCondition the hasCondition property value to be added
     */
    void addHasCondition(String newHasCondition);

    /**
     * Removes a hasCondition property value.<p>
     * 
     * @param oldHasCondition the hasCondition property value to be removed.
     */
    void removeHasCondition(String oldHasCondition);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasRain
     */
     
    /**
     * Gets all property values for the hasRain property.<p>
     * 
     * @returns a collection of values for the hasRain property.
     */
    Collection<? extends Object> getHasRain();

    /**
     * Checks if the class has a hasRain property value.<p>
     * 
     * @return true if there is a hasRain property value.
     */
    boolean hasHasRain();

    /**
     * Adds a hasRain property value.<p>
     * 
     * @param newHasRain the hasRain property value to be added
     */
    void addHasRain(Object newHasRain);

    /**
     * Removes a hasRain property value.<p>
     * 
     * @param oldHasRain the hasRain property value to be removed.
     */
    void removeHasRain(Object oldHasRain);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTemperature
     */
     
    /**
     * Gets all property values for the hasTemperature property.<p>
     * 
     * @returns a collection of values for the hasTemperature property.
     */
    Collection<? extends Object> getHasTemperature();

    /**
     * Checks if the class has a hasTemperature property value.<p>
     * 
     * @return true if there is a hasTemperature property value.
     */
    boolean hasHasTemperature();

    /**
     * Adds a hasTemperature property value.<p>
     * 
     * @param newHasTemperature the hasTemperature property value to be added
     */
    void addHasTemperature(Object newHasTemperature);

    /**
     * Removes a hasTemperature property value.<p>
     * 
     * @param oldHasTemperature the hasTemperature property value to be removed.
     */
    void removeHasTemperature(Object oldHasTemperature);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasWeatherID
     */
     
    /**
     * Gets all property values for the hasWeatherID property.<p>
     * 
     * @returns a collection of values for the hasWeatherID property.
     */
    Collection<? extends Integer> getHasWeatherID();

    /**
     * Checks if the class has a hasWeatherID property value.<p>
     * 
     * @return true if there is a hasWeatherID property value.
     */
    boolean hasHasWeatherID();

    /**
     * Adds a hasWeatherID property value.<p>
     * 
     * @param newHasWeatherID the hasWeatherID property value to be added
     */
    void addHasWeatherID(Integer newHasWeatherID);

    /**
     * Removes a hasWeatherID property value.<p>
     * 
     * @param oldHasWeatherID the hasWeatherID property value to be removed.
     */
    void removeHasWeatherID(Integer oldHasWeatherID);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
