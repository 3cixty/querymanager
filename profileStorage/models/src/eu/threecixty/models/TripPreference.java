package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: TripPreference <br>
 * @version generated on Wed Jun 25 09:55:40 CEST 2014 by ragarwal
 */

public interface TripPreference extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPreferredTripWeather
     */
     
    /**
     * Gets all property values for the hasPreferredTripWeather property.<p>
     * 
     * @returns a collection of values for the hasPreferredTripWeather property.
     */
    Collection<? extends Weather> getHasPreferredTripWeather();

    /**
     * Checks if the class has a hasPreferredTripWeather property value.<p>
     * 
     * @return true if there is a hasPreferredTripWeather property value.
     */
    boolean hasHasPreferredTripWeather();

    /**
     * Adds a hasPreferredTripWeather property value.<p>
     * 
     * @param newHasPreferredTripWeather the hasPreferredTripWeather property value to be added
     */
    void addHasPreferredTripWeather(Weather newHasPreferredTripWeather);

    /**
     * Removes a hasPreferredTripWeather property value.<p>
     * 
     * @param oldHasPreferredTripWeather the hasPreferredTripWeather property value to be removed.
     */
    void removeHasPreferredTripWeather(Weather oldHasPreferredTripWeather);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasRegularTrip
     */
     
    /**
     * Gets all property values for the hasRegularTrip property.<p>
     * 
     * @returns a collection of values for the hasRegularTrip property.
     */
    Collection<? extends RegularTrip> getHasRegularTrip();

    /**
     * Checks if the class has a hasRegularTrip property value.<p>
     * 
     * @return true if there is a hasRegularTrip property value.
     */
    boolean hasHasRegularTrip();

    /**
     * Adds a hasRegularTrip property value.<p>
     * 
     * @param newHasRegularTrip the hasRegularTrip property value to be added
     */
    void addHasRegularTrip(RegularTrip newHasRegularTrip);

    /**
     * Removes a hasRegularTrip property value.<p>
     * 
     * @param oldHasRegularTrip the hasRegularTrip property value to be removed.
     */
    void removeHasRegularTrip(RegularTrip oldHasRegularTrip);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasModalityRole
     */
     
    /**
     * Gets all property values for the hasModalityRole property.<p>
     * 
     * @returns a collection of values for the hasModalityRole property.
     */
    Collection<? extends Object> getHasModalityRole();

    /**
     * Checks if the class has a hasModalityRole property value.<p>
     * 
     * @return true if there is a hasModalityRole property value.
     */
    boolean hasHasModalityRole();

    /**
     * Adds a hasModalityRole property value.<p>
     * 
     * @param newHasModalityRole the hasModalityRole property value to be added
     */
    void addHasModalityRole(Object newHasModalityRole);

    /**
     * Removes a hasModalityRole property value.<p>
     * 
     * @param oldHasModalityRole the hasModalityRole property value to be removed.
     */
    void removeHasModalityRole(Object oldHasModalityRole);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasModalityType
     */
     
    /**
     * Gets all property values for the hasModalityType property.<p>
     * 
     * @returns a collection of values for the hasModalityType property.
     */
    Collection<? extends Object> getHasModalityType();

    /**
     * Checks if the class has a hasModalityType property value.<p>
     * 
     * @return true if there is a hasModalityType property value.
     */
    boolean hasHasModalityType();

    /**
     * Adds a hasModalityType property value.<p>
     * 
     * @param newHasModalityType the hasModalityType property value to be added
     */
    void addHasModalityType(Object newHasModalityType);

    /**
     * Removes a hasModalityType property value.<p>
     * 
     * @param oldHasModalityType the hasModalityType property value to be removed.
     */
    void removeHasModalityType(Object oldHasModalityType);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPreferredMaxTotalCost
     */
     
    /**
     * Gets all property values for the hasPreferredMaxTotalCost property.<p>
     * 
     * @returns a collection of values for the hasPreferredMaxTotalCost property.
     */
    Collection<? extends Object> getHasPreferredMaxTotalCost();

    /**
     * Checks if the class has a hasPreferredMaxTotalCost property value.<p>
     * 
     * @return true if there is a hasPreferredMaxTotalCost property value.
     */
    boolean hasHasPreferredMaxTotalCost();

    /**
     * Adds a hasPreferredMaxTotalCost property value.<p>
     * 
     * @param newHasPreferredMaxTotalCost the hasPreferredMaxTotalCost property value to be added
     */
    void addHasPreferredMaxTotalCost(Object newHasPreferredMaxTotalCost);

    /**
     * Removes a hasPreferredMaxTotalCost property value.<p>
     * 
     * @param oldHasPreferredMaxTotalCost the hasPreferredMaxTotalCost property value to be removed.
     */
    void removeHasPreferredMaxTotalCost(Object oldHasPreferredMaxTotalCost);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPreferredMaxTotalDistance
     */
     
    /**
     * Gets all property values for the hasPreferredMaxTotalDistance property.<p>
     * 
     * @returns a collection of values for the hasPreferredMaxTotalDistance property.
     */
    Collection<? extends Object> getHasPreferredMaxTotalDistance();

    /**
     * Checks if the class has a hasPreferredMaxTotalDistance property value.<p>
     * 
     * @return true if there is a hasPreferredMaxTotalDistance property value.
     */
    boolean hasHasPreferredMaxTotalDistance();

    /**
     * Adds a hasPreferredMaxTotalDistance property value.<p>
     * 
     * @param newHasPreferredMaxTotalDistance the hasPreferredMaxTotalDistance property value to be added
     */
    void addHasPreferredMaxTotalDistance(Object newHasPreferredMaxTotalDistance);

    /**
     * Removes a hasPreferredMaxTotalDistance property value.<p>
     * 
     * @param oldHasPreferredMaxTotalDistance the hasPreferredMaxTotalDistance property value to be removed.
     */
    void removeHasPreferredMaxTotalDistance(Object oldHasPreferredMaxTotalDistance);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPreferredMinAverageSpeed
     */
     
    /**
     * Gets all property values for the hasPreferredMinAverageSpeed property.<p>
     * 
     * @returns a collection of values for the hasPreferredMinAverageSpeed property.
     */
    Collection<? extends Object> getHasPreferredMinAverageSpeed();

    /**
     * Checks if the class has a hasPreferredMinAverageSpeed property value.<p>
     * 
     * @return true if there is a hasPreferredMinAverageSpeed property value.
     */
    boolean hasHasPreferredMinAverageSpeed();

    /**
     * Adds a hasPreferredMinAverageSpeed property value.<p>
     * 
     * @param newHasPreferredMinAverageSpeed the hasPreferredMinAverageSpeed property value to be added
     */
    void addHasPreferredMinAverageSpeed(Object newHasPreferredMinAverageSpeed);

    /**
     * Removes a hasPreferredMinAverageSpeed property value.<p>
     * 
     * @param oldHasPreferredMinAverageSpeed the hasPreferredMinAverageSpeed property value to be removed.
     */
    void removeHasPreferredMinAverageSpeed(Object oldHasPreferredMinAverageSpeed);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPreferredTripObjective
     */
     
    /**
     * Gets all property values for the hasPreferredTripObjective property.<p>
     * 
     * @returns a collection of values for the hasPreferredTripObjective property.
     */
    Collection<? extends Object> getHasPreferredTripObjective();

    /**
     * Checks if the class has a hasPreferredTripObjective property value.<p>
     * 
     * @return true if there is a hasPreferredTripObjective property value.
     */
    boolean hasHasPreferredTripObjective();

    /**
     * Adds a hasPreferredTripObjective property value.<p>
     * 
     * @param newHasPreferredTripObjective the hasPreferredTripObjective property value to be added
     */
    void addHasPreferredTripObjective(Object newHasPreferredTripObjective);

    /**
     * Removes a hasPreferredTripObjective property value.<p>
     * 
     * @param oldHasPreferredTripObjective the hasPreferredTripObjective property value to be removed.
     */
    void removeHasPreferredTripObjective(Object oldHasPreferredTripObjective);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
