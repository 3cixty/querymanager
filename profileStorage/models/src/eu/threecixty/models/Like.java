package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Like <br>
 * @version generated on Mon Jun 02 16:02:21 CEST 2014 by ragarwal
 */

public interface Like extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasLikeName
     */
     
    /**
     * Gets all property values for the hasLikeName property.<p>
     * 
     * @returns a collection of values for the hasLikeName property.
     */
    Collection<? extends String> getHasLikeName();

    /**
     * Checks if the class has a hasLikeName property value.<p>
     * 
     * @return true if there is a hasLikeName property value.
     */
    boolean hasHasLikeName();

    /**
     * Adds a hasLikeName property value.<p>
     * 
     * @param newHasLikeName the hasLikeName property value to be added
     */
    void addHasLikeName(String newHasLikeName);

    /**
     * Removes a hasLikeName property value.<p>
     * 
     * @param oldHasLikeName the hasLikeName property value to be removed.
     */
    void removeHasLikeName(String oldHasLikeName);



    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasLikeType
     */
     
    /**
     * Gets all property values for the hasLikeType property.<p>
     * 
     * @returns a collection of values for the hasLikeType property.
     */
    Collection<? extends Object> getHasLikeType();

    /**
     * Checks if the class has a hasLikeType property value.<p>
     * 
     * @return true if there is a hasLikeType property value.
     */
    boolean hasHasLikeType();

    /**
     * Adds a hasLikeType property value.<p>
     * 
     * @param newHasLikeType the hasLikeType property value to be added
     */
    void addHasLikeType(Object newHasLikeType);

    /**
     * Removes a hasLikeType property value.<p>
     * 
     * @param oldHasLikeType the hasLikeType property value to be removed.
     */
    void removeHasLikeType(Object oldHasLikeType);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
