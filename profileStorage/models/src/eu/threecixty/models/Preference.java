package eu.threecixty.models;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Preference <br>
 * @version generated on Mon Jun 02 16:02:21 CEST 2014 by ragarwal
 */

public interface Preference extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasEventPreference
     */
     
    /**
     * Gets all property values for the hasEventPreference property.<p>
     * 
     * @returns a collection of values for the hasEventPreference property.
     */
    Collection<? extends EventPreference> getHasEventPreference();

    /**
     * Checks if the class has a hasEventPreference property value.<p>
     * 
     * @return true if there is a hasEventPreference property value.
     */
    boolean hasHasEventPreference();

    /**
     * Adds a hasEventPreference property value.<p>
     * 
     * @param newHasEventPreference the hasEventPreference property value to be added
     */
    void addHasEventPreference(EventPreference newHasEventPreference);

    /**
     * Removes a hasEventPreference property value.<p>
     * 
     * @param oldHasEventPreference the hasEventPreference property value to be removed.
     */
    void removeHasEventPreference(EventPreference oldHasEventPreference);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasHotelPreference
     */
     
    /**
     * Gets all property values for the hasHotelPreference property.<p>
     * 
     * @returns a collection of values for the hasHotelPreference property.
     */
    Collection<? extends HotelPreference> getHasHotelPreference();

    /**
     * Checks if the class has a hasHotelPreference property value.<p>
     * 
     * @return true if there is a hasHotelPreference property value.
     */
    boolean hasHasHotelPreference();

    /**
     * Adds a hasHotelPreference property value.<p>
     * 
     * @param newHasHotelPreference the hasHotelPreference property value to be added
     */
    void addHasHotelPreference(HotelPreference newHasHotelPreference);

    /**
     * Removes a hasHotelPreference property value.<p>
     * 
     * @param oldHasHotelPreference the hasHotelPreference property value to be removed.
     */
    void removeHasHotelPreference(HotelPreference oldHasHotelPreference);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasLike
     */
     
    /**
     * Gets all property values for the hasLike property.<p>
     * 
     * @returns a collection of values for the hasLike property.
     */
    Collection<? extends Like> getHasLike();

    /**
     * Checks if the class has a hasLike property value.<p>
     * 
     * @return true if there is a hasLike property value.
     */
    boolean hasHasLike();

    /**
     * Adds a hasLike property value.<p>
     * 
     * @param newHasLike the hasLike property value to be added
     */
    void addHasLike(Like newHasLike);

    /**
     * Removes a hasLike property value.<p>
     * 
     * @param oldHasLike the hasLike property value to be removed.
     */
    void removeHasLike(Like oldHasLike);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasPlacePreference
     */
     
    /**
     * Gets all property values for the hasPlacePreference property.<p>
     * 
     * @returns a collection of values for the hasPlacePreference property.
     */
    Collection<? extends PlacePreference> getHasPlacePreference();

    /**
     * Checks if the class has a hasPlacePreference property value.<p>
     * 
     * @return true if there is a hasPlacePreference property value.
     */
    boolean hasHasPlacePreference();

    /**
     * Adds a hasPlacePreference property value.<p>
     * 
     * @param newHasPlacePreference the hasPlacePreference property value to be added
     */
    void addHasPlacePreference(PlacePreference newHasPlacePreference);

    /**
     * Removes a hasPlacePreference property value.<p>
     * 
     * @param oldHasPlacePreference the hasPlacePreference property value to be removed.
     */
    void removeHasPlacePreference(PlacePreference oldHasPlacePreference);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasSocialPreference
     */
     
    /**
     * Gets all property values for the hasSocialPreference property.<p>
     * 
     * @returns a collection of values for the hasSocialPreference property.
     */
    Collection<? extends SocialPreference> getHasSocialPreference();

    /**
     * Checks if the class has a hasSocialPreference property value.<p>
     * 
     * @return true if there is a hasSocialPreference property value.
     */
    boolean hasHasSocialPreference();

    /**
     * Adds a hasSocialPreference property value.<p>
     * 
     * @param newHasSocialPreference the hasSocialPreference property value to be added
     */
    void addHasSocialPreference(SocialPreference newHasSocialPreference);

    /**
     * Removes a hasSocialPreference property value.<p>
     * 
     * @param oldHasSocialPreference the hasSocialPreference property value to be removed.
     */
    void removeHasSocialPreference(SocialPreference oldHasSocialPreference);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasTripPrefernce
     */
     
    /**
     * Gets all property values for the hasTripPrefernce property.<p>
     * 
     * @returns a collection of values for the hasTripPrefernce property.
     */
    Collection<? extends TripPreference> getHasTripPrefernce();

    /**
     * Checks if the class has a hasTripPrefernce property value.<p>
     * 
     * @return true if there is a hasTripPrefernce property value.
     */
    boolean hasHasTripPrefernce();

    /**
     * Adds a hasTripPrefernce property value.<p>
     * 
     * @param newHasTripPrefernce the hasTripPrefernce property value to be added
     */
    void addHasTripPrefernce(TripPreference newHasTripPrefernce);

    /**
     * Removes a hasTripPrefernce property value.<p>
     * 
     * @param oldHasTripPrefernce the hasTripPrefernce property value to be removed.
     */
    void removeHasTripPrefernce(TripPreference oldHasTripPrefernce);


    /* ***************************************************
     * Property http://www.eu.3cixty.org/profile#hasUserEnteredRatings
     */
     
    /**
     * Gets all property values for the hasUserEnteredRatings property.<p>
     * 
     * @returns a collection of values for the hasUserEnteredRatings property.
     */
    Collection<? extends UserEnteredRatings> getHasUserEnteredRatings();

    /**
     * Checks if the class has a hasUserEnteredRatings property value.<p>
     * 
     * @return true if there is a hasUserEnteredRatings property value.
     */
    boolean hasHasUserEnteredRatings();

    /**
     * Adds a hasUserEnteredRatings property value.<p>
     * 
     * @param newHasUserEnteredRatings the hasUserEnteredRatings property value to be added
     */
    void addHasUserEnteredRatings(UserEnteredRatings newHasUserEnteredRatings);

    /**
     * Removes a hasUserEnteredRatings property value.<p>
     * 
     * @param oldHasUserEnteredRatings the hasUserEnteredRatings property value to be removed.
     */
    void removeHasUserEnteredRatings(UserEnteredRatings oldHasUserEnteredRatings);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
