package eu.threecixty.models.impl;

import eu.threecixty.models.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultTripPreference <br>
 * @version generated on Thu Jun 05 16:06:07 CEST 2014 by ragarwal
 */
public class DefaultTripPreference extends WrappedIndividualImpl implements TripPreference {

    public DefaultTripPreference(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.eu.3cixty.org/profile#hasPreferredTripWeather
     */
     
    public Collection<? extends Weather> getHasPreferredTripWeather() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASPREFERREDTRIPWEATHER,
                                               DefaultWeather.class);
    }

    public boolean hasHasPreferredTripWeather() {
	   return !getHasPreferredTripWeather().isEmpty();
    }

    public void addHasPreferredTripWeather(Weather newHasPreferredTripWeather) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASPREFERREDTRIPWEATHER,
                                       newHasPreferredTripWeather);
    }

    public void removeHasPreferredTripWeather(Weather oldHasPreferredTripWeather) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASPREFERREDTRIPWEATHER,
                                          oldHasPreferredTripWeather);
    }


    /* ***************************************************
     * Object Property http://www.eu.3cixty.org/profile#hasRegularTrip
     */
     
    public Collection<? extends RegularTrip> getHasRegularTrip() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASREGULARTRIP,
                                               DefaultRegularTrip.class);
    }

    public boolean hasHasRegularTrip() {
	   return !getHasRegularTrip().isEmpty();
    }

    public void addHasRegularTrip(RegularTrip newHasRegularTrip) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASREGULARTRIP,
                                       newHasRegularTrip);
    }

    public void removeHasRegularTrip(RegularTrip oldHasRegularTrip) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASREGULARTRIP,
                                          oldHasRegularTrip);
    }


    /* ***************************************************
     * Data Property http://www.eu.3cixty.org/profile#hasModalityRole
     */
     
    public Collection<? extends Object> getHasModalityRole() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMODALITYROLE, Object.class);
    }

    public boolean hasHasModalityRole() {
		return !getHasModalityRole().isEmpty();
    }

    public void addHasModalityRole(Object newHasModalityRole) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMODALITYROLE, newHasModalityRole);
    }

    public void removeHasModalityRole(Object oldHasModalityRole) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMODALITYROLE, oldHasModalityRole);
    }


    /* ***************************************************
     * Data Property http://www.eu.3cixty.org/profile#hasModalityType
     */
     
    public Collection<? extends Object> getHasModalityType() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMODALITYTYPE, Object.class);
    }

    public boolean hasHasModalityType() {
		return !getHasModalityType().isEmpty();
    }

    public void addHasModalityType(Object newHasModalityType) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMODALITYTYPE, newHasModalityType);
    }

    public void removeHasModalityType(Object oldHasModalityType) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASMODALITYTYPE, oldHasModalityType);
    }


    /* ***************************************************
     * Data Property http://www.eu.3cixty.org/profile#hasPreferredMaxTotalCost
     */
     
    public Collection<? extends Object> getHasPreferredMaxTotalCost() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMAXTOTALCOST, Object.class);
    }

    public boolean hasHasPreferredMaxTotalCost() {
		return !getHasPreferredMaxTotalCost().isEmpty();
    }

    public void addHasPreferredMaxTotalCost(Object newHasPreferredMaxTotalCost) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMAXTOTALCOST, newHasPreferredMaxTotalCost);
    }

    public void removeHasPreferredMaxTotalCost(Object oldHasPreferredMaxTotalCost) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMAXTOTALCOST, oldHasPreferredMaxTotalCost);
    }


    /* ***************************************************
     * Data Property http://www.eu.3cixty.org/profile#hasPreferredMaxTotalDistance
     */
     
    public Collection<? extends Object> getHasPreferredMaxTotalDistance() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMAXTOTALDISTANCE, Object.class);
    }

    public boolean hasHasPreferredMaxTotalDistance() {
		return !getHasPreferredMaxTotalDistance().isEmpty();
    }

    public void addHasPreferredMaxTotalDistance(Object newHasPreferredMaxTotalDistance) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMAXTOTALDISTANCE, newHasPreferredMaxTotalDistance);
    }

    public void removeHasPreferredMaxTotalDistance(Object oldHasPreferredMaxTotalDistance) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMAXTOTALDISTANCE, oldHasPreferredMaxTotalDistance);
    }


    /* ***************************************************
     * Data Property http://www.eu.3cixty.org/profile#hasPreferredMinAverageSpeed
     */
     
    public Collection<? extends Object> getHasPreferredMinAverageSpeed() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMINAVERAGESPEED, Object.class);
    }

    public boolean hasHasPreferredMinAverageSpeed() {
		return !getHasPreferredMinAverageSpeed().isEmpty();
    }

    public void addHasPreferredMinAverageSpeed(Object newHasPreferredMinAverageSpeed) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMINAVERAGESPEED, newHasPreferredMinAverageSpeed);
    }

    public void removeHasPreferredMinAverageSpeed(Object oldHasPreferredMinAverageSpeed) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDMINAVERAGESPEED, oldHasPreferredMinAverageSpeed);
    }


    /* ***************************************************
     * Data Property http://www.eu.3cixty.org/profile#hasPreferredTripObjective
     */
     
    public Collection<? extends Object> getHasPreferredTripObjective() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDTRIPOBJECTIVE, Object.class);
    }

    public boolean hasHasPreferredTripObjective() {
		return !getHasPreferredTripObjective().isEmpty();
    }

    public void addHasPreferredTripObjective(Object newHasPreferredTripObjective) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDTRIPOBJECTIVE, newHasPreferredTripObjective);
    }

    public void removeHasPreferredTripObjective(Object oldHasPreferredTripObjective) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASPREFERREDTRIPOBJECTIVE, oldHasPreferredTripObjective);
    }


}
